{"version":3,"sources":["serviceWorker.js","components/DashboardPage/listItems.js","components/DashboardPage/Title.js","components/DashboardPage/Deposits.js","components/DashboardPage/Orders.js","components/DashboardPage/Dashboard.js","routes/Main/Main.js","components/SignUpPage/SignUp.js","components/SignUpPage/SignUpPage.js","routes/Signup/Signup.js","components/LoginPage/SignInSide.js","redirectManager.js","cookieManager.js","requests/userRequests.js","components/LoginPage/LoginPage.js","routes/Login/Login.js","routes/Credits/Credits.js","store/actions.js","store/action-types.js","components/CodeEditor/CodeEditor.js","components/ModelRenderer/ModelRenderer.js","components/EditPage/EditPage.js","routes/Edit/Edit.js","routes/index.js","store/reducers.js","store/middleware.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","preventDefault","event","useStyles","makeStyles","depositContext","flex","Deposits","classes","Fragment","className","Link","href","onClick","createData","id","date","name","shipTo","paymentMethod","amount","rows","theme","seeMore","marginTop","spacing","Orders","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","key","Credits","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","link","margin","Dashboard","React","useState","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Button","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","Main","Component","withRouter","avatar","backgroundColor","palette","secondary","main","form","submit","SignUp","Avatar","noValidate","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","type","FormControlLabel","control","Checkbox","value","justify","mt","SignUpPage","Signup","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","SignInSide","elevation","square","redirectManager","reloadPage","reload","goTo","path","getUrlVars","vars","replace","m","getUrlParam","parameter","defaultvalue","urlparameter","indexOf","this","handleRedirect","undefined","getCurrentPath","pathname","substring","cookieManager","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","ca","split","i","length","c","charAt","axios","require","userRequests","putUser","requestBody","a","post","response","console","error","loginUserRequest","email","password","jwt","data","oidUser","getUser","get","params","putContact","sessionToken","put","headers","getContacts","CircularLoading","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","CircularProgress","LoginPage","handleEmailChange","bind","handlePasswordChange","handleLoginAttempt","validateLoginInput","state","emailError","passwordError","loginInProgress","loginFailUnauthorizedError","loginFailInternalServerError","loginFailBadRequestError","loginSuccess","checkLoginSuccess","newEmail","setState","target","newPassword","Promise","resolve","reject","renderUnauthorized","renderInternalServerError","renderBadRequest","then","loginResponse","status","store","set","Login","compileCode","payload","socket","socketIOClient","CodeEditor","onChange","newValue","emit","room","code","on","log","generateRandom","join","nextProps","nextState","mode","editorProps","$blockScrolling","connect","dispatch","ModelRenderer","onCanvasLoaded","canvas","createScene","engine","BABYLON","refs","renderCanvas","scene","addEventListener","resize","removeEventListener","oldProps","dispose","runRenderLoop","render","ref","EditPage","Edit","Root","isLoggedIn","currentRoute","routes","tempRoutes","initialState","rendererMiddleWare","next","action","createStore","Object","assign","applyMiddleware","App","rel","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.deb1ea74.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Orders\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Customers\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reports\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LayersIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Integrations\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last quarter\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end sale\" />\r\n    </ListItem>\r\n  </div>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default function Deposits() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Deposits</Title>\r\n      <Typography component=\"p\" variant=\"h4\">\r\n        $3,024.00\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on 15 March, 2019\r\n      </Typography>\r\n      <div>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          View balance\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\n\r\n// Generate Order Data\r\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\r\n  return { id, date, name, shipTo, paymentMethod, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\r\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\r\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\r\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\r\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Orders() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Orders</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Date</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Ship To</TableCell>\r\n            <TableCell>Payment Method</TableCell>\r\n            <TableCell align=\"right\">Sale Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.date}</TableCell>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.shipTo}</TableCell>\r\n              <TableCell>{row.paymentMethod}</TableCell>\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          See more orders\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction Credits() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        <Link color=\"inherit\" href=\"/credits\">\r\n        Credits\r\n        </Link>\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1),\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <Button \r\n            href=\"/login\" \r\n            color=\"inherit\" \r\n            variant=\"outlined\" \r\n            className={classes.link}>\r\n            Login\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Deposits again */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposits />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposits />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Orders />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Credits />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Dashboard from '../../components/DashboardPage/Dashboard';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import Navbar from '../../components/NavBar/';\r\n//import LoginManager from '../../components/core/LoginManager/';\r\n//import Home from './Home';\r\n\r\nimport \"./style.css\";\r\n\r\nclass Main extends React.Component {\r\n/*\r\n    componentDidMount() {\r\n        // Here we assume the user is logged in\r\n        let nextRoute = '/main',\r\n            requestedRoute = this.props.history.location.pathname;\r\n\r\n        if (!requestedRoute.match(/^\\/main\\/*$/)) {\r\n            nextRoute = requestedRoute;\r\n        }\r\n\r\n        // Go to the next route\r\n        this.props.history.push(nextRoute + (this.props.history.location.search ? this.props.history.location.search : \"\"));\r\n    }\r\n\r\n    routeTo(newRoute) {\r\n        // Here we assume the paths are valid since it comes from the\r\n        // navigation bar\r\n        this.props.history.push(newRoute);\r\n    }\r\n*/\r\n    render() {\r\n        return <Dashboard />\r\n        /*\r\n          return (\r\n          <Box className=\"cldi-home-page\">\r\n            <LoginManager store={this.props.store} />\r\n            <Switch>\r\n              <Route path=\"/main/viewprofile\" component={ViewProfilePage} />\r\n              <Route path=\"/main/joinfandom\" component={JoinFandom} />\r\n              <Route path=\"/main/newfandom\" component={NewFandom} />\r\n              <Route exact path=\"/main/messenger\" component={MessengerPage} />\r\n              <Route path=\"/main/contacts\" component={ViewContacts} />\r\n              <Route path=\"/main/newpost\" component={NewPost} />\r\n              <Route exact path=\"/main\" component={Home} />\r\n              <Route path=\"*\"><Typography align=\"center\">INVALID PATH</Typography></Route>\r\n            </Switch>\r\n            <Navbar callback={this.routeTo.bind(this)} />\r\n          </Box>\r\n        )\r\n        */\r\n    }\r\n}\r\n\r\nexport default withRouter(Main);","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Credits() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      <Link color=\"inherit\" href=\"/credits\">\r\n      Credits\r\n      </Link>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n      <Link variant=\"h1\" color=\"primary\" href=\"/\">\r\n            Jigsaw\r\n          </Link>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Credits />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport SignUp from './SignUp';\r\n\r\n\r\nclass SignUpPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <SignUp />\r\n        )\r\n    }\r\n}\r\nexport default SignUpPage;\r\n","import React from 'react';\r\n//import Registration from '../../components/Registration/Registration.jsx'\r\nimport SignUpPage from '../../components/SignUpPage/SignUpPage';\r\n\r\nclass Signup extends React.Component{\r\n\r\n    render(){\r\n        return <SignUpPage />\r\n    }\r\n}\r\nexport default Signup;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(Jigsaw.jpeg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Credits() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      <Link color=\"inherit\" href=\"/credits\">\r\n      Credits\r\n      </Link>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Link variant=\"h1\" color=\"primary\" href=\"/\">\r\n            Jigsaw\r\n          </Link>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick=\"location.href='/main'\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Credits />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","let redirectManager = {\r\n\r\n    reloadPage: function(){\r\n        window.location.reload();\r\n    },\r\n    goTo: function(path){\r\n        window.location.href = `/${path}`;\r\n    },\r\n    getUrlVars : function () {\r\n        var vars = {};\r\n        window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {\r\n            vars[key] = value;\r\n        });\r\n        return vars;\r\n    },\r\n    getUrlParam: function(parameter, defaultvalue){\r\n        var urlparameter = defaultvalue;\r\n        if(window.location.href.indexOf(parameter) > -1){\r\n            urlparameter = this.getUrlVars()[parameter];\r\n            }\r\n        return urlparameter;\r\n    },\r\n   \r\n    handleRedirect: function(){\r\n        this.goTo(this.getUrlParam(\"redirect\") === undefined ? \"\" : this.getUrlParam(\"redirect\"))\r\n    },\r\n    getCurrentPath: function(){\r\n        return window.location.pathname.substring(1)\r\n    }\r\n}\r\nexport default redirectManager","let cookieManager = {\r\n    setCookie: function (cname, cvalue, exdays) {\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n        var expires = \"expires=\" + d.toUTCString();\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n    },\r\n\r\n    getCookie: function (cname) {\r\n        var name = cname + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\nexport default cookieManager","import cookieManager from '../cookieManager'\r\n\r\nconst axios = require('axios')\r\n\r\nlet userRequests = {\r\n\r\n    putUser: async function (requestBody) {\r\n        try {\r\n            const response = await axios.post('/api/v1/addUser', requestBody)\r\n            return response\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            return error\r\n        }\r\n    },\r\n    loginUserRequest: async function (email, password) {\r\n        try {\r\n            const response = await axios.post('/api/v1/login', { \"email\": email, \"password\": password })\r\n\r\n            let jwt = response.data.jwt;\r\n            let oidUser = response.data.oidUser;\r\n            cookieManager.setCookie(\"sessionToken\", jwt, 1)\r\n            cookieManager.setCookie(\"authenticatedUserEmail\", email, 1)\r\n            cookieManager.setCookie(\"authenticatedOidUser\", oidUser, 1)\r\n            return response\r\n        }\r\n        catch (error) {\r\n            return error.response\r\n        }\r\n    },\r\n    getUser: async function (oidUser) {\r\n        try {\r\n            const response = await axios.get('/api/v1/getProfile', {\r\n                params: {\r\n                    oidUser: oidUser\r\n                }\r\n            });\r\n\r\n            return response\r\n        } catch (error) {\r\n            return error.response;\r\n        }\r\n    },\r\n    putContact: async function (requestBody, sessionToken) {\r\n        try {\r\n            const response = await axios.put('/api/v1/addContact', requestBody, {\r\n                headers: {\r\n                    jwt: sessionToken\r\n                }\r\n            })\r\n\r\n            return response\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            return error.response\r\n        }\r\n    },\r\n\r\n    getContacts: async function (oidUser, sessionToken) {\r\n        try {\r\n            return await axios.get(\"/api/v1/getContacts\", {\r\n                params: {\r\n                    oidUser: oidUser\r\n                },\r\n                headers: {\r\n                    jwt: sessionToken,\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n            return error.response;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default userRequests;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport SignInSide from './SignInSide';\r\nimport redirectManager from '../../redirectManager';\r\nimport userRequests from '../../requests/userRequests';\r\n\r\nrequire('./LoginPage.css')\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\r\n        this.validateLoginInput = this.validateLoginInput.bind(this);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            emailError: false,\r\n            passwordError: false,\r\n            loginInProgress: false,\r\n            loginFailUnauthorizedError: false,\r\n            loginFailInternalServerError: false,\r\n            loginFailBadRequestError: false,\r\n            loginSuccess: false\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.checkLoginSuccess()\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <SignInSide />\r\n        )\r\n        /*\r\n        return (\r\n            <Container className=\"login-page\" maxWidth=\"sm\">\r\n                <Card className=\"login-card\">\r\n                    <img\r\n                        style={{ width: \"25%\", display: \"block\", margin: \"0 auto\" }}\r\n                        src=\"/logo.svg\"\r\n                    />\r\n                    <Box pt={1}>\r\n                        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n                           Welcome to Fanlinc!\r\n                        </Typography >\r\n                        <Typography variant=\"body2\" align=\"center\">\r\n                            <i>The social media nework designed for fans</i>\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box className=\"login-form-textfields-container\">\r\n                        <EmailField onInput={this.handleEmailChange} error={this.state.emailError} />\r\n                        <PasswordField onInput={this.handlePasswordChange} error={this.state.passwordError} />\r\n                        {this.renderLoginFailErrorText()}\r\n                        <LoginButton onClick={this.handleLoginAttempt} />\r\n                        <Typography className=\"login-page-sign-up-link\">\r\n                            Don't have an account?&nbsp;\r\n                            <Link href=\"/signup\">Click here to sign up.</Link>\r\n                        </Typography>\r\n                        {this.renderLoginLoading()}\r\n                    </Box>\r\n                </Card>\r\n            </Container>\r\n        )\r\n        */\r\n    }\r\n\r\n    handleEmailChange(newEmail) {\r\n        this.setState({ email: newEmail.target.value, emailError: false })\r\n    }\r\n    handlePasswordChange(newPassword) {\r\n        this.setState({ password: newPassword.target.value, passwordError: false })\r\n    }\r\n\r\n    validateLoginInput() {\r\n        let promise = new Promise((resolve, reject) => {\r\n            this.setState({ passwordError: this.state.password === \"\", emailError: this.state.email === \"\" })\r\n            resolve()\r\n        })\r\n\r\n        return promise\r\n    }\r\n    renderLoginLoading() {\r\n        if (this.state.loginInProgress) {\r\n            return <CircularLoading />\r\n        }\r\n    }\r\n    renderUnauthorized() {\r\n        if (this.state.loginFailUnauthorizedError) {\r\n            return (\r\n                <Typography color=\"error\" variant=\"subtitle2\">\r\n                    Wrong Password!\r\n            </Typography>\r\n            )\r\n        }\r\n    }\r\n    renderInternalServerError() {\r\n        if (this.state.loginFailInternalServerError) {\r\n            return (\r\n                <Typography color=\"error\" variant=\"subtitle2\">\r\n                    Internal Server Error!\r\n            </Typography>\r\n            )\r\n        }\r\n    }\r\n    renderBadRequest() {\r\n        if (this.state.loginFailBadRequestError) {\r\n            return (\r\n                <Typography color=\"error\" variant=\"subtitle2\">\r\n                    Wrong Username / Password!\r\n            </Typography>\r\n            )\r\n        }\r\n    }\r\n    renderLoginFailErrorText() {\r\n        return (\r\n            <div>\r\n                {this.renderUnauthorized()}\r\n                {this.renderInternalServerError()}\r\n                {this.renderBadRequest()}\r\n            </div>\r\n        )\r\n    }\r\n    handleLoginAttempt() {\r\n        /*\r\n        console.log(\"Login Attempt\");\r\n        */\r\n        \r\n        this.validateLoginInput()\r\n            .then(() => {\r\n                if (!this.state.passwordError && !this.state.emailError) {\r\n                    this.setState({ loginInProgress: true, loginFailUnauthorizedError: false, loginFailBadRequestError: false, loginFailInternalServerError: false })\r\n                    userRequests.loginUserRequest(this.state.email, this.state.password).then(\r\n                        (loginResponse) => {\r\n                            if (loginResponse.status === 200) {\r\n                                this.setState({ loginSuccess: true })\r\n                                /// After we have completed the login sucessfully, we update the global store to have the authenticated user, to be used throughout the app\r\n                                this.props.store.set('authenticatedUserEmail', this.state.email)\r\n                                this.props.store.set('isLoggedIn', true)\r\n                                this.props.store.set('authenticatedOidUser', loginResponse.data.oidUser)\r\n\r\n\r\n                            } else if (loginResponse.status === 401) {\r\n                                this.setState({ loginFailUnauthorizedError: true })\r\n                            } else if (loginResponse.status === 400) {\r\n                                this.setState({ loginFailBadRequestError: true })\r\n                            } else if (loginResponse.status === 500) {\r\n                                this.setState({ loginFailInternalServerError: true })\r\n                            }\r\n                            this.setState({ loginInProgress: false })\r\n\r\n                        }\r\n                    )\r\n                }\r\n            });\r\n    }\r\n    checkLoginSuccess() {\r\n        if (this.state.loginSuccess) {\r\n            redirectManager.handleRedirect()\r\n            //console.log(\"Login Success\");\r\n        }\r\n    }\r\n\r\n}\r\nfunction LoginButton(props) {\r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"login-button\"\r\n            onClick={props.onClick}\r\n        >\r\n            Sign In\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nfunction EmailField(props) {\r\n\r\n    return (<TextField\r\n        required\r\n        error={props.error}\r\n        label=\"Email\"\r\n        placeholder=\"somebody@email.com\"\r\n        className=\"login-text-field\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        onInput={props.onInput}\r\n\r\n    />)\r\n}\r\n\r\nfunction PasswordField(props) {\r\n\r\n    return (<TextField\r\n        required\r\n        onInput={props.onInput}\r\n        error={props.error}\r\n        label=\"Password\"\r\n        className=\"login-text-field\"\r\n        margin=\"normal\"\r\n        type=\"password\"\r\n        variant=\"outlined\"\r\n\r\n    />)\r\n}\r\n\r\nfunction CircularLoading() {\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function tick() {\r\n            // reset when reaching 100%\r\n            setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n        }\r\n\r\n        const timer = setInterval(tick, 20);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Box display=\"flex\" className=\"login-progress-holder\">\r\n            <CircularProgress size={30} variant=\"determinate\" value={progress} />\r\n        </Box>\r\n    );\r\n}\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport LoginPage from '../../components/LoginPage/LoginPage'\r\n\r\nclass Login extends React.Component {\r\n\r\n    render() {\r\n        return <LoginPage className=\"cldi-login-page\" store={this.props.store}/>\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nclass Credits extends React.Component {\r\n\r\n    render() {\r\n      return(\r\n        <div>\r\n          <h1>Credits:</h1>\r\n          <li>\r\n            <a href=\"https://material-ui.com/\">Page Templates</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://medium.com/lessons-from-ordinary/lesson-from-a-jigsaw-puzzle-d5f9a8136805\">Login Page Image</a>\r\n          </li>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            <Link color=\"inherit\" href=\"/\">\r\n            Home\r\n            </Link>\r\n          </Typography>\r\n        </div>\r\n        \r\n      )\r\n    }\r\n\r\n}\r\n\r\nexport default Credits;\r\n","import { COMPILE_CODE } from \"./action-types\";\r\n\r\nfunction compileCode(payload) {\r\n    return {type: COMPILE_CODE, payload};\r\n}\r\n\r\nexport default compileCode;","export const COMPILE_CODE = \"COMPILE_CODE\";\r\n\r\nexport default COMPILE_CODE;","import React from 'react';\r\nimport AceEditor from \"react-ace\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport compileCode from '../../store/actions';\r\nimport socketIOClient from 'socket.io-client';\r\nimport generateRandom from 'sillyname';\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport starterCode from './starterCode';\r\n\r\nrequire('./CodeEditor.css')\r\n\r\nconst socket = socketIOClient('http://localhost:5000');\r\n\r\nclass CodeEditor extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            room:'',\r\n            code: ''\r\n        }\r\n\r\n        if(window.location.pathname !== '/edit' && window.location.pathname !== ''){\r\n          socket.emit('join', window.location.pathname)\r\n        }\r\n\r\n        socket.on('room', (room) => {\r\n          console.log(room)\r\n          this.setState({\r\n            room: room\r\n          })\r\n        })\r\n\r\n        socket.on('message', (code) => {\r\n          this.setState({\r\n            code: code.value,\r\n            room: code.room\r\n          })\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.compileCode(this.state.code);\r\n        if(window.location.pathname === '/edit'){\r\n          window.location.pathname = `/edit/${generateRandom().split(' ').join('')}`\r\n        }\r\n    }\r\n\r\n    onChange = (newValue) => {\r\n      socket.emit('message', {newValue, room: this.state.room})\r\n    }\r\n\r\n    // https://github.com/securingsincity/react-ace/issues/181\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.state.code !== nextState.code;\r\n    }\r\n\r\n    // Render editor\r\n    render () {\r\n        return (\r\n        <div className=\"split left\">\r\n            <AceEditor\r\n                mode=\"javascript\"\r\n                theme=\"dracula\"\r\n                onChange={this.onChange}\r\n                name=\"ace-editor\"\r\n                editorProps={{ $blockScrolling: true }}\r\n                value={this.state.code}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n            />\r\n            <Button className=\"compile-button\" variant=\"contained\" color=\"primary\" onClick={()=> this.props.compileCode(this.state.code)}>Compile</Button>\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        compileCode: code => dispatch(compileCode({code: code}))\r\n    };\r\n};\r\n\r\n// TODO :: undo for collab edit\r\n// var rev = session.$undoManager.startNewGroup(); // start new undo group\r\n// ... // apply the edit\r\n// session.$undoManager.markIgnored(rev); // mark the new group as ignored\r\n\r\nexport default connect(null, mapDispatchToProps)(CodeEditor);\r\n","import React from 'react';\r\nimport * as BABYLON from 'babylonjs';\r\nimport {connect} from 'react-redux';\r\n\r\nrequire('./ModelRenderer.css')\r\n\r\nclass ModelRenderer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            code: null,\r\n            createScene: null,\r\n            engine: new BABYLON.Engine(this.refs.renderCanvas, true),\r\n            scene: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener('resize', () => this.state.engine.resize());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', () => this.state.engine.resize());\r\n    }\r\n\r\n    componentDidUpdate(oldProps) {\r\n        console.log('renderer updated');\r\n        // if (oldProps.scene !== this.props.scene) {\r\n            if (oldProps.scene != null) {\r\n                oldProps.scene.dispose();\r\n            }\r\n            let createScene = function(){};\r\n            console.log(this.state);\r\n            // eval(this.props.code);\r\n            let scene = createScene(window, this.state.engine, this.refs.renderCanvas);\r\n            if (scene) {\r\n                    this.state.engine.runRenderLoop(function() {\r\n                    scene.render();\r\n                });\r\n            }\r\n        // }\r\n    }\r\n\r\n    onCanvasLoaded = (canvas) => {\r\n        if (canvas !== null) {\r\n            this.state.canvas = canvas;\r\n        }\r\n    }\r\n\r\n    // Render canvas\r\n    render () {\r\n        return (\r\n        <canvas className='split right' ref={this.onCanvasLoaded} />\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {code: state.code}\r\n};\r\n\r\nexport default connect(mapStateToProps)(ModelRenderer);\r\n","import React from 'react';\r\nimport CodeEditor from '../CodeEditor/CodeEditor'\r\nimport ModelRenderer from '../ModelRenderer/ModelRenderer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass EditPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='edit-page'>\r\n                <CodeEditor />\r\n                <ModelRenderer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect()(EditPage);","import React from 'react';\r\nimport EditPage from '../../components/EditPage/EditPage.js';\r\n\r\nclass Edit extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <EditPage />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Main from './Main/Main';\r\nimport Signup from './Signup/Signup'\r\nimport Login from \"./Login/Login\";\r\nimport Credits from \"./Credits/Credits\"\r\nimport Edit from \"./Edit/Edit\"\r\n\r\nclass Root extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            currentRoute: \"viewprofile\",\r\n            routes: null\r\n        };\r\n    }\r\n/*\r\n    componentDidMount() {\r\n        // Determine routes based on whether the user is logged in or not\r\n        let isLoggedIn = this.props.store.get(\"isLoggedIn\");\r\n        this.setState({\r\n            isLoggedIn: isLoggedIn,\r\n            routes: (isLoggedIn ? loggedInRoutes(this.props) : nonLoggedInRoutes())\r\n        });\r\n\r\n        if (isLoggedIn) {\r\n            let nextRoute = '/main',\r\n                requestedRoute = this.props.history.location.pathname;\r\n            // Go to the requested path iff the path is none of the following conditions\r\n            if (requestedRoute !== '/' && requestedRoute !== '/signup' && requestedRoute !== '/login') {\r\n                nextRoute = requestedRoute;\r\n            }\r\n\r\n            // Go to the next route\r\n            this.props.history.push(nextRoute + (this.props.history.location.search ? this.props.history.location.search : \"\"));\r\n        } else if (this.props.history.location.pathname === \"/signup\") {\r\n            this.props.history.push('/signup');\r\n        } else if (this.props.history.location.pathname === \"/login\") {\r\n            this.props.history.push('/login');\r\n        } else {\r\n            this.props.history.push('/credits');\r\n        }\r\n    }\r\n*/\r\n    render() {\r\n        return tempRoutes();\r\n    }\r\n\r\n}\r\n\r\n// const loggedInRoutes = (props) => {\r\n//     return (\r\n//       <Switch>\r\n//         <Route path=\"/main\">\r\n//           <Main store={props.store} />\r\n//         </Route>\r\n//         <Route path=\"/edit\">\r\n//             <Edit store={props.store} />\r\n//         </Route>\r\n//         <Route path=\"*\">\r\n//             INVALID ROUTE\r\n//         </Route>\r\n//         <Route path=\"/credits\" component={Credits} />\r\n//       </Switch>\r\n//     );\r\n// }\r\n\r\n// const nonLoggedInRoutes = () => {\r\n//     return (\r\n//       <Switch>\r\n//         <Route path=\"/signup\" component={Signup} />\r\n//         <Route path=\"/login\" component={Login} />\r\n//         <Route path=\"/credits\" component={Credits} />\r\n//       </Switch>\r\n//     );\r\n// }\r\n\r\nconst tempRoutes = () => {\r\n    return (\r\n        <Switch>\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/credits\" component={Credits} />\r\n          <Route path=\"/edit\" component={Edit} />\r\n          <Route path=\"/main\" component={Main} />\r\n        </Switch>\r\n      );\r\n}\r\n\r\nexport default Root;\r\n","import { COMPILE_CODE } from './action-types';\r\n\r\nconst initialState = {\r\n    code: null,\r\n    createScene: null\r\n};\r\n\r\nfunction rootReducer(state=initialState, action) {\r\n    if (action.type === COMPILE_CODE) {\r\n        if (state.code !== action.payload.code) console.log(\"code has changed, updating state\");\r\n        state = Object.assign({}, state, {code: action.payload.code});\r\n    }\r\n    return state;\r\n}\r\n\r\nexport { rootReducer };\r\n","import COMPILE_CODE from './action-types'\r\n\r\nfunction rendererMiddleWare({dispatch}) {\r\n    return function(next) {\r\n        return function(action) {\r\n            if (action.type === COMPILE_CODE) {\r\n                // actually don't need this\r\n                // action.payload.code =\r\n                // `'use strict';${action.payload.code}`;\r\n            }\r\n            return next(action);\r\n        }\r\n    }\r\n}\r\n\r\nexport default rendererMiddleWare;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport Root from './routes/index.js';\r\nimport {rootReducer} from './store/reducers';\r\nimport rendererMiddleWare from './store/middleware.js';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(rendererMiddleWare));\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          <Provider store={store}>\r\n            <Router>\r\n              <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n              <Switch>\r\n                <Route path=\"/\" component={Root} />\r\n              </Switch>\r\n            </Router>\r\n          </Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["serviceWorker.js","components/DashboardPage/listItems.js","requests/userRequests.js","components/NavBar/NavAppBar.js","components/Posts/ConfirmationDialog.js","components/Posts/PostAddBox.js","components/Posts/PostContent.js","components/Posts/Posts.js","components/DashboardPage/Dashboard.js","routes/Main/Main.js","components/SignUpPage/SignUp.js","components/SignUpPage/SignUpPage.js","routes/Signup/Signup.js","components/LoginPage/SignInSide.js","components/LoginPage/LoginPage.js","routes/Login/Login.js","routes/Credits/Credits.js","store/actions.js","store/action-types.js","components/CodeEditor/CodeEditor.js","components/CodeEditor/starterCode.js","components/ModelRenderer/playground.js","components/ModelRenderer/ModelRenderer.js","components/SideDrawer/SideDrawer.js","components/EditPage/EditPage.js","routes/Edit/Edit.js","routes/index.js","store/reducers.js","store/middleware.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","mainListItems","ListItem","button","component","href","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","axios","require","userRequests","signup","new_user","a","post","response","console","error","signin","user","signout","get","getCurrUser","NavAppBar","props","handleDrawerOpen","setState","open","handleDrawerClose","handleSignOut","then","res","state","current_user","this","hasChat","IconButton","color","onClick","onOpen","aria-label","Badge","badgeContent","Button","variant","className","classes","link","Typography","noWrap","data","firstName","root","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","title","name","username","messageButton","loginLogoutButton","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","Divider","List","React","Component","withStyles","theme","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","whiteSpace","height","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","margin","withTheme","ConfirmationDialog","onClose","loading","onConfirm","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","disabled","PostAddBox","useState","setOpen","handleClose","aria-labelledby","id","TextField","autoFocus","label","type","fullWidth","PostContent","page","deletePostDialogOpen","deletePostLoading","rowsPerPage","closeDeletePostDialog","deletePost","pushMessageToSnackbar","setTimeout","text","onDelete","handleChangePage","__","printImageGrid","push","icon","posts","length","Box","p","Grid","slice","map","element","item","xs","sm","md","key","m","Paper","TablePagination","count","backIconButtonProps","nextIconButtonProps","onChangePage","select","dNone","selectIcon","actions","dBlock","caption","labelRowsPerPage","PureComponent","Posts","Credits","align","Link","useStyles","makeStyles","Dashboard","Container","maxWidth","pt","Main","withRouter","SignUp","handleSignUp","e","preventDefault","email","value","password","firstname","lastname","catch","err","bind","Avatar","avatar","form","noValidate","autoComplete","required","inputRef","node","FormControlLabel","control","Checkbox","submit","justify","mt","marginTop","backgroundColor","palette","secondary","main","SignUpPage","Signup","SignInSide","handleSignIn","image","elevation","square","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","LoginPage","Login","store","compileCode","payload","socket","socketIOClient","CodeEditor","onChange","newValue","emit","room","code","pathname","on","generateRandom","split","join","nextProps","nextState","mode","editorProps","$blockScrolling","connect","dispatch","playground","createScene","debug","debugCode","ModelRenderer","ref","srcDoc","randomColor","styles","minWidth","SideDrawer","messages","handleChange","handleSubmit","msg","lastName","event","target","chatHistory","style","anchor","disableGutters","pl","pr","onSubmit","EditPage","sideDrawerOpen","closeDrawer","openDrawer","Edit","Root","isLoggedIn","currentRoute","routes","tempRoutes","path","initialState","rendererMiddleWare","next","action","createStore","Object","assign","applyMiddleware","App","rel","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yWAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mWCTOC,EACX,6BACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAU,IAAIC,KAAK,KAClC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACN,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAU,IAAIC,KAAK,SAClC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,WAKfC,EACX,6BACE,kBAACC,EAAA,EAAD,CAAeC,OAAK,GAApB,kBACA,kBAACT,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACG,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACN,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACG,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACN,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACG,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,oB,0CC3CtBI,GAAQC,EAAQ,KA+CPC,GA7CI,CAEfC,OAAO,WAAD,6BAAE,WAAgBC,GAAhB,eAAAC,EAAA,+EAEuBL,GAAMM,KAAK,cAAeF,GAFjD,cAEMG,EAFN,yBAGOA,GAHP,uCAMAC,QAAQC,MAAR,MANA,iFAAF,mDAAC,GAUPC,OAAO,WAAD,6BAAE,WAAgBC,GAAhB,eAAAN,EAAA,+EAEuBL,GAAMM,KAAK,cAAeK,GAFjD,cAEMJ,EAFN,yBAGOA,GAHP,uCAMAC,QAAQC,MAAR,MANA,iFAAF,mDAAC,GAUPG,QAAQ,WAAD,6BAAE,4BAAAP,EAAA,+EAEsBL,GAAMa,IAAI,gBAFhC,cAEKN,EAFL,yBAGMA,GAHN,uCAMDC,QAAQC,MAAR,MANC,iFAAF,kDAAC,GAURK,YAAY,WAAD,6BAAE,4BAAAT,EAAA,+EAEkBL,GAAMa,IAAI,sBAF5B,cAECN,EAFD,yBAGEA,GAHF,uCAMLC,QAAQC,MAAR,MANK,iFAAF,kDAAC,ICmEVM,G,YAkEJ,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAjEVC,iBAAmB,WACjB,EAAKC,SAAS,CAAEC,MAAM,KA+DL,EA7DnBC,kBAAoB,WAClB,EAAKF,SAAS,CAAEC,MAAM,KA4DL,EA1DnBE,cAAgB,WACdnB,GACKU,UACAU,MAAK,SAAAC,GACJtC,OAAOC,SAASO,KAAK,QAyDzB,EAAK+B,MAAQ,CACTL,MAAM,EACNM,aAAc,IALH,E,6EAjDjB,GAA2B,SAAvBC,KAAKV,MAAMW,QACb,OACE,kBAACC,EAAA,EAAD,CACAC,MAAM,UACNC,QAASJ,KAAKV,MAAMe,OACpBC,aAAW,mBAET,kBAACC,EAAA,EAAD,CAAOC,aAAc,IAAKL,MAAM,aAC9B,kBAAC,IAAD,U,0CAQR,MAAgC,KAA5BH,KAAKF,MAAMC,aAET,kBAACU,EAAA,EAAD,CACE1C,KAAK,SACLoC,MAAM,UACNO,QAAQ,WACRC,UAAWX,KAAKV,MAAMsB,QAAQC,MAJhC,SAUA,kBAACJ,EAAA,EAAD,CACEL,QAASJ,KAAKL,cACdQ,MAAM,UACNO,QAAQ,WACRC,UAAWX,KAAKV,MAAMsB,QAAQC,MAJhC,c,iCAYN,GAAgC,KAA5Bb,KAAKF,MAAMC,aACb,OACE,kBAACe,EAAA,EAAD,CAAYhD,UAAU,KAAK4C,QAAQ,KAAKP,MAAM,UAAUY,QAAM,GAC3Df,KAAKF,MAAMC,kB,yDAgBC,IAAD,OAClBvB,GACKY,cACAQ,MAAK,SAAAC,GACJ,IACE,EAAKL,SAAS,CAACO,aAAcF,EAAImB,KAAK,GAAGC,YACzC,gB,+BAOR,IAAMxB,EAAOO,KAAKF,MAAML,KAExB,OACE,yBAAKkB,UAAWX,KAAKV,MAAMsB,QAAQM,MACjC,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQV,UAAWW,YAAKtB,KAAKV,MAAMsB,QAAQW,OAAQ9B,GAAQO,KAAKV,MAAMsB,QAAQY,cAC7F,kBAACC,EAAA,EAAD,CAASd,UAAWX,KAAKV,MAAMsB,QAAQc,SACrC,kBAACxB,EAAA,EAAD,CACEyB,KAAK,QACLxB,MAAM,UACNG,aAAW,cACXF,QAASJ,KAAKT,iBACdoB,UAAWW,YAAKtB,KAAKV,MAAMsB,QAAQgB,WAAYnC,GAAQO,KAAKV,MAAMsB,QAAQiB,mBAE1E,kBAAC,IAAD,OAEF,kBAACf,EAAA,EAAD,CAAYhD,UAAU,KAAK4C,QAAQ,KAAKP,MAAM,UAAUY,QAAM,EAACJ,UAAWX,KAAKV,MAAMsB,QAAQkB,OAC1F9B,KAAKV,MAAMyC,MAEb/B,KAAKgC,WACLhC,KAAKiC,gBACLjC,KAAKkC,sBAGV,kBAACC,EAAA,EAAD,CACEzB,QAAQ,YACRE,QAAS,CACPwB,MAAOd,YAAKtB,KAAKV,MAAMsB,QAAQyB,aAAc5C,GAAQO,KAAKV,MAAMsB,QAAQ0B,mBAE1E7C,KAAMA,GAEN,yBAAKkB,UAAWX,KAAKV,MAAMsB,QAAQ2B,aACjC,kBAACrC,EAAA,EAAD,CAAYE,QAASJ,KAAKN,mBACxB,kBAAC,IAAD,QAGJ,kBAAC8C,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KAAO9E,GACP,kBAAC6E,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KAAOtE,S,GAhIOuE,IAAMC,WAuIdC,gBA1ND,SAAAC,GAAK,MAAK,CACvB3B,KAAM,CACJ4B,QAAS,QAEXpB,QAAS,CACPqB,aAAc,IAEhBR,YAAY,aACVO,QAAS,OACTE,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNL,EAAMM,OAAOzB,SAElBH,OAAQ,CACN6B,OAAQP,EAAMO,OAAOC,OAAS,EAC9BC,WAAYT,EAAMU,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,iBAGzCpC,YAAa,CACXqC,WAxBgB,IAyBhBC,MAAM,eAAD,OAzBW,IAyBX,OACLR,WAAYT,EAAMU,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASI,kBAGzCnC,WAAY,CACVoC,YAAa,IAEfnC,iBAAkB,CAChBiB,QAAS,QAEXhB,MAAO,CACLmC,SAAU,GAEZ5B,YAAa,CACXhB,SAAU,WACV6C,WAAY,SACZJ,MA3CgB,IA4ChBK,OAAQ,QACRb,WAAYT,EAAMU,YAAYC,OAAO,QAAS,CAC5CC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASI,kBAGzCzB,iBAAiB,aACf8B,UAAW,SACXd,WAAYT,EAAMU,YAAYC,OAAO,QAAS,CAC5CC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEvCE,MAAOjB,EAAMwB,QAAQ,IACpBxB,EAAMyB,YAAYC,GAAG,MAAQ,CAC5BT,MAAOjB,EAAMwB,QAAQ,KAGzBG,aAAc3B,EAAMM,OAAOzB,QAC3B+C,QAAS,CACPR,SAAU,EACVE,OAAQ,QACRO,SAAU,QAEZC,UAAW,CACTC,WAAY/B,EAAMwB,QAAQ,GAC1BQ,cAAehC,EAAMwB,QAAQ,IAE/BjC,MAAO,CACLc,QAASL,EAAMwB,QAAQ,GACvBvB,QAAS,OACT4B,SAAU,OACVI,cAAe,UAEjBC,YAAa,CACXZ,OAAQ,KAEVtD,KAAM,CACJmE,OAAQnC,EAAMwB,QAAQ,EAAG,OA2IM,CAAEY,WAAW,GAAhCrC,CAAwCvD,I,qGC5LzC6F,OAvCf,SAA4B5F,GAAQ,IAC1BG,EAAsDH,EAAtDG,KAAM0F,EAAgD7F,EAAhD6F,QAASC,EAAuC9F,EAAvC8F,QAAStD,EAA8BxC,EAA9BwC,MAAO2C,EAAuBnF,EAAvBmF,QAASY,EAAc/F,EAAd+F,UAChD,OACE,kBAACC,GAAA,EAAD,CACE7F,KAAMA,EACN0F,QAASA,EACTI,qBAAsBH,EACtBI,qBAAsBJ,GAEtB,kBAACK,GAAA,EAAD,KAAc3D,GACd,kBAAC4D,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAoBlB,IAEtB,kBAACmB,GAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQL,QAAS+E,EAASU,SAAUT,GAApC,SAGA,kBAAC3E,EAAA,EAAD,CACEN,MAAM,YACNC,QAASiF,EACT3E,QAAQ,YACRmF,SAAUT,GAJZ,U,oBCnBO,SAASU,KAAc,IAAD,EACXpD,IAAMqD,UAAS,GADJ,oBAC5BtG,EAD4B,KACtBuG,EADsB,KAO7BC,EAAc,WAClBD,GAAQ,IAGV,OACE,6BACE,kBAACvF,EAAA,EAAD,CAAQC,QAAQ,WAAWP,MAAM,YAAYC,QAVzB,WACtB4F,GAAQ,KASN,eAGA,kBAACV,GAAA,EAAD,CAAQ7F,KAAMA,EAAM0F,QAASc,EAAaC,kBAAgB,qBACxD,kBAACT,GAAA,EAAD,CAAaU,GAAG,qBAAhB,eACA,kBAACT,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,2BAGA,kBAACS,GAAA,EAAD,CACEC,WAAS,EACTrB,OAAO,QACPmB,GAAG,OACHG,MAAM,eACNC,KAAK,eACLC,WAAS,KAGb,kBAACZ,GAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQL,QAAS6F,EAAa9F,MAAM,aAApC,UAGA,kBAACM,EAAA,EAAD,CAAQ1C,KAAK,QAAQoC,MAAM,WAA3B,UC5BV,IAQMsG,G,2MACJ3G,MAAQ,CACN4G,KAAM,EACNC,sBAAsB,EACtBC,mBAAmB,G,EAGrBC,YAAc,G,EAEdC,sBAAwB,WACtB,EAAKtH,SAAS,CACZmH,sBAAsB,EACtBC,mBAAmB,K,EAIvBG,WAAa,WAAO,IACVC,EAA0B,EAAK1H,MAA/B0H,sBACR,EAAKxH,SAAS,CAAEoH,mBAAmB,IACnCK,YAAW,WACT,EAAKzH,SAAS,CACZoH,mBAAmB,EACnBD,sBAAsB,IAExBK,EAAsB,CACpBE,KAAM,2CAEP,O,EAGLC,SAAW,WACT,EAAK3H,SAAS,CACZmH,sBAAsB,K,EAI1BS,iBAAmB,SAACC,EAAIX,GACtB,EAAKlH,SAAS,CAAEkH,U,EAGlBY,eAAiB,WACC,GACRC,KAAK,CACXxF,KAAM,SACN3B,QAAS,EAAK+G,SACdK,KAAM,kBAAC,KAAD,QALa,IAObC,EAAU,EAAKnI,MAAfmI,MACAf,EAAS,EAAK5G,MAAd4G,KACR,OAAIe,EAAMC,OAAS,EAEf,kBAACC,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,GAAA,EAAD,CAAMlD,WAAS,EAACN,QAAS,GACtBoD,EACEK,MACCpB,EAAO,EAAKG,YACZH,EAAO,EAAKG,YAAc,EAAKA,aAEhCkB,KAAI,SAAAC,GAAO,OACV,kBAACH,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAKL,EAAQ7B,IAC3C,kBAACrF,EAAA,EAAD,SAAckH,EAAd,WAQZ,kBAACL,EAAA,EAAD,CAAKW,EAAG,GACN,kBAACxH,EAAA,EAAD,kF,wEAOI,IAAD,EACmDd,KAAKF,MAAvD4G,EADD,EACCA,KAAMC,EADP,EACOA,qBAAsBC,EAD7B,EAC6BA,kBAD7B,EAEoB5G,KAAKV,MAAxBmI,EAFD,EAECA,MAAO7G,EAFR,EAEQA,QAEf,OACE,kBAAC2H,GAAA,EAAD,KACE,kBAAC9G,EAAA,EAAD,CAASd,UAAWC,EAAQc,SAC1B,kBAACZ,EAAA,EAAD,CAAYJ,QAAQ,MAApB,iBACA,kBAACoF,GAAD,OAEF,kBAACtD,EAAA,EAAD,MACCxC,KAAKsH,iBACN,kBAACkB,GAAA,EAAD,CACE1K,UAAU,MACV2K,MAAOhB,EAAMC,OACbb,YAAa7G,KAAK6G,YAClBH,KAAMA,EACNgC,oBAAqB,CACnB,aAAc,iBAEhBC,oBAAqB,CACnB,aAAc,aAEhBC,aAAc5I,KAAKoH,iBACnBxG,QAAS,CACPiI,OAAQjI,EAAQkI,MAChBC,WAAYnI,EAAQkI,MACpBE,QAASvB,EAAMC,OAAS,EAAI9G,EAAQqI,OAASrI,EAAQkI,MACrDI,QAASzB,EAAMC,OAAS,EAAI9G,EAAQqI,OAASrI,EAAQkI,OAEvDK,iBAAiB,KAEnB,kBAAC,GAAD,CACE1J,KAAMkH,EACN7E,MAAM,eACN2C,QAAQ,yCACRU,QAASnF,KAAK8G,sBACd1B,QAASwB,EACTvB,UAAWrF,KAAK+G,kB,GAlHAqC,iBA+HXxG,eAvIA,CACbqG,OAAQ,CAAEnG,QAAS,SACnBgG,MAAO,CAAEhG,QAAS,QAClBpB,QAAS,CACPuB,eAAgB,kBAmILL,CAAmB6D,ICvInB4C,G,iLAVX,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CACI5B,MAAO,U,GANC2B,iBCOpB,SAASE,KACL,OACE,kBAACxI,EAAA,EAAD,CAAYJ,QAAQ,QAAQP,MAAM,gBAAgBoJ,MAAM,UACtD,kBAACC,EAAA,EAAD,CAAMrJ,MAAM,UAAUpC,KAAK,YAA3B,YAOR,IAEM0L,GAAYC,aAAW,SAAA7G,GAAK,MAAK,CACrC3B,KAAM,CACJ4B,QAAS,QAEXpB,QAAS,CACPqB,aAAc,IAEhBR,YAAY,aACVO,QAAS,OACTE,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNL,EAAMM,OAAOzB,SAElBH,OAAQ,CACN6B,OAAQP,EAAMO,OAAOC,OAAS,EAC9BC,WAAYT,EAAMU,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,iBAGzCpC,YAAa,CACXqC,WAxBgB,IAyBhBC,MAAM,eAAD,OAzBW,IAyBX,OACLR,WAAYT,EAAMU,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASI,kBAGzCnC,WAAY,CACVoC,YAAa,IAEfnC,iBAAkB,CAChBiB,QAAS,QAEXhB,MAAO,CACLmC,SAAU,GAEZ5B,YAAa,CACXhB,SAAU,WACV6C,WAAY,SACZJ,MA3CgB,IA4ChBR,WAAYT,EAAMU,YAAYC,OAAO,QAAS,CAC5CC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASI,kBAGzCzB,iBAAiB,aACf8B,UAAW,SACXd,WAAYT,EAAMU,YAAYC,OAAO,QAAS,CAC5CC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEvCE,MAAOjB,EAAMwB,QAAQ,IACpBxB,EAAMyB,YAAYC,GAAG,MAAQ,CAC5BT,MAAOjB,EAAMwB,QAAQ,KAGzBG,aAAc3B,EAAMM,OAAOzB,QAC3B+C,QAAS,CACPR,SAAU,EACVE,OAAQ,QACRO,SAAU,QAEZC,UAAW,CACTC,WAAY/B,EAAMwB,QAAQ,GAC1BQ,cAAehC,EAAMwB,QAAQ,IAE/BjC,MAAO,CACLc,QAASL,EAAMwB,QAAQ,GACvBvB,QAAS,OACT4B,SAAU,OACVI,cAAe,UAEjBC,YAAa,CACXZ,OAAQ,KAEVtD,KAAM,CACJmE,OAAQnC,EAAMwB,QAAQ,EAAG,QAId,SAASsF,KACtB,IAAM/I,EAAU6I,KAEhB,OACE,yBAAK9I,UAAWC,EAAQM,MACtB,kBAACC,EAAA,EAAD,MACA,kBAAC,GAAD,CAAWY,KAAK,YAAY9B,QAAQ,UACpC,0BAAMU,UAAWC,EAAQ6D,SACvB,yBAAK9D,UAAWC,EAAQ4D,eACxB,kBAACoF,EAAA,EAAD,CAAWC,SAAS,KAAKlJ,UAAWC,EAAQ+D,WAC1C,kBAAC,GAAD,MACA,kBAACgD,EAAA,EAAD,CAAKmC,GAAI,GACP,kBAAC,GAAD,U,WCxGNC,G,iLAsBE,OAAO,kBAAC,GAAD,U,GAtBIrH,IAAMC,WA4CVqH,eAAWD,I,2DCvC1B,SAAST,KACP,OACE,kBAACxI,EAAA,EAAD,CAAYJ,QAAQ,QAAQP,MAAM,gBAAgBoJ,MAAM,UACtD,kBAACC,EAAA,EAAD,CAAMrJ,MAAM,UAAUpC,KAAK,YAA3B,YAON,IAoBMkM,G,YAEF,WAAY3K,GAAQ,IAAD,8BACf,4CAAMA,KAWV4K,aAAe,SAACC,GAEZA,EAAEC,iBACF,IAAM1L,EAAW,CAAE2L,MAAO,EAAKA,MAAMC,MAAOC,SAAU,EAAKA,SAASD,MAAOE,UAAW,EAAKA,UAAUF,MAAOG,SAAU,EAAKA,SAASH,OAEpI9L,GACKC,OAAOC,GACPkB,MAAK,kBAAMrC,OAAOC,SAASO,KAAO,OAClC2M,OAAM,SAAAC,GACH7L,QAAQC,MAAM4L,OAZtB,EAAKT,aAAe,EAAKA,aAAaU,KAAlB,iBATL,E,sEA0BT,IAAD,OACL,OACI,kBAAChB,EAAA,EAAD,CAAW9L,UAAU,OAAO+L,SAAS,MACjC,kBAAC1I,EAAA,EAAD,MACA,yBAAKR,UAAWX,KAAKV,MAAMsB,QAAQwB,OAC/B,kBAACoH,EAAA,EAAD,CAAM9I,QAAQ,KAAKP,MAAM,UAAUpC,KAAK,KAAxC,UAGA,kBAAC8M,GAAA,EAAD,CAAQlK,UAAWX,KAAKV,MAAMsB,QAAQkK,QAClC,kBAAC,KAAD,OAEJ,kBAAChK,EAAA,EAAD,CAAYhD,UAAU,KAAK4C,QAAQ,MAAnC,WAGA,0BAAMC,UAAWX,KAAKV,MAAMsB,QAAQmK,KAAMC,YAAU,GAChD,kBAACnD,GAAA,EAAD,CAAMlD,WAAS,EAACN,QAAS,GACrB,kBAACwD,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAAC/B,GAAA,EAAD,CACI6E,aAAa,QACblJ,KAAK,YACLrB,QAAQ,WACRwK,UAAQ,EACR1E,WAAS,EACTL,GAAG,YACHG,MAAM,aACND,WAAS,EACT8E,SAAU,SAAAC,GACN,EAAKZ,UAAYY,MAI7B,kBAACvD,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAAC/B,GAAA,EAAD,CACI1F,QAAQ,WACRwK,UAAQ,EACR1E,WAAS,EACTL,GAAG,WACHG,MAAM,YACNvE,KAAK,WACLkJ,aAAa,QACbE,SAAU,SAAAC,GACN,EAAKX,SAAWW,MAI5B,kBAACvD,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC9B,GAAA,EAAD,CACI1F,QAAQ,WACRwK,UAAQ,EACR1E,WAAS,EACTL,GAAG,QACHG,MAAM,gBACNvE,KAAK,QACLkJ,aAAa,QACbE,SAAU,SAAAC,GACN,EAAKf,MAAQe,MAIzB,kBAACvD,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC9B,GAAA,EAAD,CACI1F,QAAQ,WACRwK,UAAQ,EACR1E,WAAS,EACTzE,KAAK,WACLuE,MAAM,WACNC,KAAK,WACLJ,GAAG,WACH8E,aAAa,mBACbE,SAAU,SAAAC,GACN,EAAKb,SAAWa,MAI5B,kBAACvD,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAACmD,GAAA,EAAD,CACIC,QAAS,kBAACC,GAAA,EAAD,CAAUjB,MAAM,mBAAmBnK,MAAM,YAClDmG,MAAM,iFAIlB,kBAAC7F,EAAA,EAAD,CACI8F,KAAK,SACLC,WAAS,EACT9F,QAAQ,YACRP,MAAM,UACNQ,UAAWX,KAAKV,MAAMsB,QAAQ4K,OAC9BpL,QAASJ,KAAKkK,cANlB,WAUA,kBAACrC,GAAA,EAAD,CAAMlD,WAAS,EAAC8G,QAAQ,YACpB,kBAAC5D,GAAA,EAAD,CAAMI,MAAI,GACN,kBAACuB,EAAA,EAAD,CAAMzL,KAAK,SAAS2C,QAAQ,SAA5B,wCAOhB,kBAACiH,EAAA,EAAD,CAAK+D,GAAI,GACL,kBAAC,GAAD,Y,GAjIChJ,IAAMC,WAuIXC,gBA3JD,SAAAC,GAAK,MAAK,CACvBT,MAAO,CACLuJ,UAAW9I,EAAMwB,QAAQ,GACzBvB,QAAS,OACTgC,cAAe,SACf9B,WAAY,UAEd8H,OAAQ,CACN9F,OAAQnC,EAAMwB,QAAQ,GACtBuH,gBAAiB/I,EAAMgJ,QAAQC,UAAUC,MAE3ChB,KAAM,CACJjH,MAAO,OACP6H,UAAW9I,EAAMwB,QAAQ,IAE3BmH,OAAQ,CACNxG,OAAQnC,EAAMwB,QAAQ,EAAG,EAAG,OA2IG,CAACY,WAAW,GAA/BrC,CAAsCqH,IC3KvC+B,G,iLALP,OACI,kBAAC,GAAD,U,GAHatJ,IAAMC,WCMhBsJ,G,iLAHP,OAAO,kBAAC,GAAD,U,GAHMvJ,IAAMC,WC4C3B,SAAS2G,KACP,OACE,kBAACxI,EAAA,EAAD,CAAYJ,QAAQ,QAAQP,MAAM,gBAAgBoJ,MAAM,UACtD,kBAACC,EAAA,EAAD,CAAMrJ,MAAM,UAAUpC,KAAK,YAA3B,Y,IAOAmO,G,YAEF,WAAY5M,GAAQ,IAAD,8BACf,4CAAMA,KAIV6M,aAAe,SAAChC,GAEZA,EAAEC,iBACF,IAAMnL,EAAO,CAAEoL,MAAO,EAAKA,MAAMC,MAAOC,SAAU,EAAKA,SAASD,OAEhE9L,GACKQ,OAAOC,GACPW,MAAK,kBAAMrC,OAAOC,SAASO,KAAO,OAClC2M,OAAM,SAAAC,GACH7L,QAAQC,MAAM4L,OAZtB,EAAKwB,aAAe,EAAKA,aAAavB,KAAlB,iBAFL,E,sEAmBT,IAAD,OACL,OACI,kBAAC/C,GAAA,EAAD,CAAMlD,WAAS,EAAC7G,UAAU,OAAO6C,UAAWX,KAAKV,MAAMsB,QAAQM,MAC3D,kBAACC,EAAA,EAAD,MACA,kBAAC0G,GAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGzH,UAAWX,KAAKV,MAAMsB,QAAQwL,QAClE,kBAACvE,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGtK,UAAWyK,KAAO8D,UAAW,EAAGC,QAAM,GACnE,yBAAK3L,UAAWX,KAAKV,MAAMsB,QAAQwB,OAC/B,kBAACoH,EAAA,EAAD,CAAM9I,QAAQ,KAAKP,MAAM,UAAUpC,KAAK,KAAxC,UAGA,kBAAC8M,GAAA,EAAD,CAAQlK,UAAWX,KAAKV,MAAMsB,QAAQkK,QAClC,kBAAC,KAAD,OAEJ,kBAAChK,EAAA,EAAD,CAAYhD,UAAU,KAAK4C,QAAQ,MAAnC,WAGA,0BAAMC,UAAWX,KAAKV,MAAMsB,QAAQmK,KAAMC,YAAU,GAChD,kBAAC5E,GAAA,EAAD,CACI1F,QAAQ,WACRsE,OAAO,SACPkG,UAAQ,EACR1E,WAAS,EACTL,GAAG,QACHG,MAAM,gBACNvE,KAAK,QACLkJ,aAAa,QACb5E,WAAS,EACT8E,SAAU,SAAAC,GACN,EAAKf,MAAQe,KAGrB,kBAAChF,GAAA,EAAD,CACI1F,QAAQ,WACRsE,OAAO,SACPkG,UAAQ,EACR1E,WAAS,EACTzE,KAAK,WACLuE,MAAM,WACNC,KAAK,WACLJ,GAAG,WACH8E,aAAa,mBACbE,SAAU,SAAAC,GACN,EAAKb,SAAWa,KAGxB,kBAACC,GAAA,EAAD,CACIC,QAAS,kBAACC,GAAA,EAAD,CAAUjB,MAAM,WAAWnK,MAAM,YAC1CmG,MAAM,gBAEV,kBAAC7F,EAAA,EAAD,CACI+F,WAAS,EACT9F,QAAQ,YACRP,MAAM,UACNQ,UAAWX,KAAKV,MAAMsB,QAAQ4K,OAC9BpL,QAASJ,KAAKmM,cALlB,WASA,kBAACtE,GAAA,EAAD,CAAMlD,WAAS,GACX,kBAACkD,GAAA,EAAD,CAAMI,MAAI,GACN,kBAACuB,EAAA,EAAD,CAAMzL,KAAK,UAAU2C,QAAQ,SACxB,oCAIb,kBAACiH,EAAA,EAAD,CAAK+D,GAAI,GACL,kBAAC,GAAD,e,GAvFPhJ,IAAMC,WAgGfC,gBAzIE,SAAAC,GAAK,MAAK,CAC1B3B,KAAM,CACJiD,OAAQ,SAEViI,MAAO,CACLG,gBAAiB,mBACjBC,iBAAkB,YAClBZ,gBACyB,SAAvB/I,EAAMgJ,QAAQtF,KAAkB1D,EAAMgJ,QAAQY,KAAK,KAAO5J,EAAMgJ,QAAQY,KAAK,IAC/EC,eAAgB,QAChBC,mBAAoB,UAEtBvK,MAAO,CACL4C,OAAQnC,EAAMwB,QAAQ,EAAG,GACzBvB,QAAS,OACTgC,cAAe,SACf9B,WAAY,UAEd8H,OAAQ,CACN9F,OAAQnC,EAAMwB,QAAQ,GACtBuH,gBAAiB/I,EAAMgJ,QAAQC,UAAUC,MAE3ChB,KAAM,CACJjH,MAAO,OACP6H,UAAW9I,EAAMwB,QAAQ,IAE3BmH,OAAQ,CACNxG,OAAQnC,EAAMwB,QAAQ,EAAG,EAAG,OA8GM,CAAEY,WAAW,GAAnCrC,CAA2CsJ,ICxJ3D3N,EAAQ,K,IAYOqO,G,iLANP,OACI,kBAAC,GAAD,U,GAJYlK,IAAMC,WCMfkK,G,iLALP,OAAO,kBAAC,GAAD,CAAWlM,UAAU,kBAAkBmM,MAAO9M,KAAKV,MAAMwN,Y,GAHpDpK,IAAMC,WCyBX2G,G,iLArBT,OACE,6BACE,wCACA,4BACE,uBAAGvL,KAAK,4BAAR,mBAEF,4BACE,uBAAGA,KAAK,qFAAR,qBAEF,kBAAC+C,EAAA,EAAD,CAAYJ,QAAQ,QAAQP,MAAM,gBAAgBoJ,MAAM,UACtD,kBAACC,EAAA,EAAD,CAAMrJ,MAAM,UAAUpC,KAAK,KAA3B,c,GAbU2E,IAAMC,W,qBCEboK,OAJf,SAAqBC,GACjB,MAAO,CAACzG,KCHgB,eDGIyG,Y,sDEShCzO,EAAQ,KAGR,IAAM0O,GAASC,KAAe,0BAExBC,G,YAEF,aAAe,IAAD,8BACV,+CA+BJC,SAAW,SAACC,GACVJ,GAAOK,KAAK,UAAW,CAACD,WAAUE,KAAM,EAAKzN,MAAMyN,OACnD,EAAK/N,SAAS,CAACgO,KAAMH,KAhCnB,EAAKvN,MAAQ,CACTyN,KAAK,GACLC,KCvBY,2hCD0BgB,UAA7BjQ,OAAOC,SAASiQ,UAAqD,KAA7BlQ,OAAOC,SAASiQ,UACzDR,GAAOK,KAAK,OAAQ/P,OAAOC,SAASiQ,UAGtCR,GAAOS,GAAG,QAAQ,SAACH,GACjB,EAAK/N,SAAS,CACZ+N,KAAMA,OAIVN,GAAOS,GAAG,WAAW,SAACF,GACpB,EAAKhO,SAAS,CACZgO,KAAMA,EAAKlD,MACXiD,KAAMC,EAAKD,UApBL,E,iFA0BVvN,KAAKV,MAAMyN,YAAY/M,KAAKF,MAAM0N,MACF,UAA7BjQ,OAAOC,SAASiQ,WACjBlQ,OAAOC,SAASiQ,SAAhB,gBAAoCE,OAAiBC,MAAM,KAAKC,KAAK,Q,4CAUrDC,EAAWC,GAC7B,OAAO/N,KAAKF,MAAM0N,OAASO,EAAUP,O,+BAI9B,IAAD,OACN,OACA,yBAAK7M,UAAU,SACX,kBAAC,KAAD,CACIqN,KAAK,aACLnL,MAAM,UACNuK,SAAUpN,KAAKoN,SACfrL,KAAK,aACLkM,YAAa,CAAEC,iBAAiB,GAChC5D,MAAOtK,KAAKF,MAAM0N,KAClB1J,MAAM,OACNK,OAAO,SAEX,kBAAC1D,EAAA,EAAD,CAAQE,UAAU,iBAAiBD,QAAQ,YAAYP,MAAM,UAAUC,QAAS,WAAM,EAAKd,MAAMyN,YAAY,EAAKjN,MAAM0N,QAAxH,gB,GA1Da9K,IAAMC,WA0EhBwL,mBAAQ,MAXvB,SAA4BC,GACxB,MAAO,CACHrB,YAAa,SAAAS,GAAI,OAAIY,EAASrB,GAAY,CAACS,KAAMA,SAS1CW,CAAkChB,IEyClCkB,OApIf,SAAoBC,EAAaC,GAC7B,IAAIC,EAAS,GAOb,OANID,IACAC,EAAS,8EAKP,orCAAN,OAoCcF,EApCd,+HAyCcE,EAzCd,4gHCJJjQ,EAAQ,K,IAEFkQ,G,YAEF,aAAe,IAAD,8BACV,+CACK3O,MAAQ,CACT0N,KAAM,MAHA,E,sEASV,OACI,4BAAQ7M,UAAU,cAAcmB,MAAM,cAAc4M,IAAI,cAAcC,OAAQN,GAAWrO,KAAKV,MAAMkO,KAAMxN,KAAKV,MAAMiP,QAAS,S,GAZ9G7L,IAAMC,WAuBnBwL,gBANS,SAAArO,GAGpB,MAAO,CAAC0N,KAAM1N,EAAM0N,KAAMe,MAAOzO,EAAMyO,SAG5BJ,CAAyBM,I,+BCfpCG,GAAcrQ,EAAQ,KAEpB0O,GAASC,KAAe,0BAE9B3O,EAAQ,KAER,IAEMsQ,GAAS,CACbC,SAHkB,KAMdC,G,YAEJ,WAAYzP,GAAQ,IAAD,8BACf,4CAAMA,KAEDQ,MAAQ,CACTc,QAAQtB,EAAMsB,QACd0J,MAAM,GACNiD,KAAK,GACLyB,SAAU,GACVjP,aAAc,GACdI,MAAO,IAGX,EAAK8O,aAAe,EAAKA,aAAarE,KAAlB,iBACpB,EAAKsE,aAAe,EAAKA,aAAatE,KAAlB,iBAEY,UAA7BrN,OAAOC,SAASiQ,UAAqD,KAA7BlQ,OAAOC,SAASiQ,UACzDR,GAAOK,KAAK,OAAQ/P,OAAOC,SAASiQ,UAGtCR,GAAOS,GAAG,QAAQ,SAACH,GACjB,EAAK/N,SAAS,CACZ+N,KAAMA,OAIVN,GAAOS,GAAG,gBAAgB,SAACyB,GACzB,EAAK3P,SAAS,CACZwP,SAAS,GAAD,oBAAM,EAAKlP,MAAMkP,UAAjB,CAA2B,CAAC/P,KAAMkQ,EAAIlQ,KAAMqL,MAAO6E,EAAI7E,MAAOnK,MAAOgP,EAAIhP,SACjFoN,KAAM4B,EAAI5B,UA5BC,E,iFAkCE,IAAD,OAClB/O,GACKY,cACAQ,MAAK,SAAAC,GACJ,IACE,EAAKL,SAAS,CAACO,aAAcF,EAAImB,KAAK,GAAGC,UAAY,IAAMpB,EAAImB,KAAK,GAAGoO,WACvE,SACA,EAAK5P,SAAS,CAACO,aAAc,aAAe4N,SAE9C,EAAKnO,SAAS,CAACW,MAAOyO,Y,mCAIjBS,GACXrP,KAAKR,SAAS,CAAC8K,MAAO+E,EAAMC,OAAOhF,U,mCAGxB+E,GACXpC,GAAOK,KAAK,eAAgB,CAAChD,MAAOtK,KAAKF,MAAMwK,MAAOiD,KAAMvN,KAAKF,MAAMyN,KAAMtO,KAAMe,KAAKF,MAAMC,aAAcI,MAAOH,KAAKF,MAAMK,QAC9HkP,EAAMjF,iBACNpK,KAAKR,SAAS,CACZ8K,MAAO,O,+BAKT,IACMiF,EADUvP,KAAKF,MAAMkP,SACCjH,KAAK,SAACoH,EAAK9G,GACrC,OACI,wBAAIlC,GAAG,UAAUkC,IAAKA,GACpB,yBAAK1H,UAAU,WAAWwF,GAAG,UAAUqJ,MAAO,CAACrP,MAAOgP,EAAIhP,OAAQkI,IAAKA,GAAM8G,EAAIlQ,KAAjF,KACCkQ,EAAI7E,UAKX,OACE,kBAACnI,EAAA,EAAD,CAAQsN,OAAO,QAAQhQ,KAAMO,KAAKV,MAAMG,KAAMiB,QAAQ,cACtD,kBAACe,EAAA,EAAD,CAASiO,gBAAc,EAACF,MAAOX,KAE7B,kBAACpN,EAAA,EAAD,CAASiO,gBAAc,EAACF,MAAOX,IAC7B,kBAAClH,EAAA,EAAD,CACEgI,GAAI,EACJC,GAAI,EACJ9M,QAAQ,OACRG,eAAe,gBACfa,MAAM,OACNd,WAAW,UAEX,kBAAClC,EAAA,EAAD,CAAYJ,QAAQ,MAApB,QACA,kBAACR,EAAA,EAAD,CACEE,QAASJ,KAAKV,MAAM6F,QACpBhF,MAAM,UACNG,aAAW,oBAEX,kBAAC,KAAD,SAIN,kBAACkC,EAAA,EAAD,MACA,wBAAI2D,GAAG,YAAYoJ,GACnB,0BAAM5O,UAAU,OAAOkP,SAAU7P,KAAKkP,cACpC,2BAAOvO,UAAU,QAAQ4F,KAAK,OAAO+D,MAAOtK,KAAKF,MAAMwK,MAAO8C,SAAUpN,KAAKiP,eAAgB,4BAAQtO,UAAU,UAAlB,c,GAlGhF+B,IAAMC,WA0GhBC,eAAWiM,GAAXjM,CAAmBmM,IC9HlCxQ,EAAQ,K,IAEFuR,G,2MACJhQ,MAAQ,CAAEiQ,gBAAgB,G,EAE1BC,YAAc,WACZ,EAAKxQ,SAAS,CAAEuQ,gBAAgB,K,EAGlCE,WAAa,WACX,EAAKzQ,SAAS,CAAEuQ,gBAAgB,K,wEAI5B,OACI,yBAAKpP,UAAU,aACX,kBAAC,GAAD,CAAWoB,KAAK,OAAO9B,QAAQ,OAAOI,OAAQL,KAAKiQ,aACnD,8BACE,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYxQ,KAAMO,KAAKF,MAAMiQ,eAAgB5K,QAASnF,KAAKgQ,mB,GAnBpDtN,IAAMC,WA0BdwL,iBAAU2B,ICrBVI,G,iLAPP,OACI,kBAAC,GAAD,U,GAJOxN,IAAMC,WCKnBwN,G,YAEF,WAAY7Q,GAAQ,IAAD,8BACf,4CAAMA,KAEDQ,MAAQ,CACTsQ,YAAY,EACZC,aAAc,cACdC,OAAQ,MANG,E,sEAsCf,OAAOC,S,GAxCI7N,IAAMC,WAwEnB4N,GAAa,WACf,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UAAU1S,UAAWmO,KACjC,kBAAC,IAAD,CAAOuE,KAAK,SAAS1S,UAAW+O,KAChC,kBAAC,IAAD,CAAO2D,KAAK,WAAW1S,UAAWwL,KAClC,kBAAC,IAAD,CAAOkH,KAAK,QAAQ1S,UAAWoS,KAC/B,kBAAC,IAAD,CAAOM,KAAK,QAAQ1S,UAAWiM,KAC/B,kBAAC,IAAD,CAAOyG,KAAK,IAAI1S,UAAWiM,OAKtBoG,MC3FTM,GAAe,CACjBjD,KAAM,KACNc,YAAa,MCWFoC,OAbf,YACI,OADoC,EAAXtC,SAClB,SAASuC,GACZ,OAAO,SAASC,GAMZ,OALIA,EAAOrK,KAKJoK,EAAKC,MCElB9D,GAAQ+D,aFLd,WAAkD,IAA7B/Q,EAA4B,uDAAtB2Q,GAAcG,EAAQ,uCAO7C,MTdwB,iBSQpBA,EAAOrK,KACHzG,EAAM0N,OAASoD,EAAO5D,QAAQQ,OAClC1N,EAAQgR,OAAOC,OAAO,GAAIjR,EAAO,CAAC0N,KAAMoD,EAAO5D,QAAQQ,QTTnC,iBSUboD,EAAOrK,OACdzG,EAAQgR,OAAOC,OAAO,GAAIjR,EAAO,CAACyO,MAAOqC,EAAO5D,QAAQuB,SAErDzO,IEF4BkR,YAAgBN,KAmBxCO,G,iLAdP,OACE,kBAAC,IAAD,CAAUnE,MAAOA,IACf,kBAAC,IAAD,KACE,0BAAMoE,IAAI,aAAanT,KAAK,gFAC5B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyS,KAAK,IAAI1S,UAAWqS,Y,GARzBzN,IAAMC,WCNxBwO,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,S9B2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7R,MAAK,SAAA8R,GACJA,EAAaC,gBAEdjH,OAAM,SAAA3L,GACLD,QAAQC,MAAMA,EAAM6S,c","file":"static/js/main.bc89ca1b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component=\"a\" href=\"/\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component=\"a\" href=\"/edit\">\n      <ListItemIcon>\n        <FeaturedPlayListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Edit\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved projects</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Star Platinum\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Super Fly\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Tower of Grey\" />\n    </ListItem>\n  </div>\n);\n","import cookieManager from '../cookieManager'\n\nconst axios = require('axios')\n\nlet userRequests = {\n\n    signup: async function (new_user) {\n        try {\n            const response = await axios.post('/api/signup', new_user)\n            return response\n        }\n        catch (error) {\n            console.error(error);\n            return error\n        }\n    },\n    signin: async function (user) {\n        try {\n            const response = await axios.post('/api/signin', user)\n            return response\n        }\n        catch (error) {\n            console.error(error);\n            return error\n        }\n    },\n    signout: async function () {\n        try {\n            const response = await axios.get('/api/signout')\n            return response\n        }\n        catch (error) {\n            console.error(error);\n            return error\n        }\n    },\n    getCurrUser: async function () {\n        try {\n            const response = await axios.get('/api/currrent_user')\n            return response\n        }\n        catch (error) {\n            console.error(error);\n            return error\n        }\n    }\n\n}\n\nexport default userRequests;\n","import React from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { mainListItems, secondaryListItems } from '../DashboardPage/listItems';\nimport { Button, withStyles } from '@material-ui/core';\nimport userRequests from '../../requests/userRequests'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    height: '100vh',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  link: {\n    margin: theme.spacing(1, 1),\n  },\n});\n\nclass NavAppBar extends React.Component {\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n  handleSignOut = () => {\n    userRequests\n        .signout()\n        .then(res => {\n          window.location.href=\"/\";\n        });\n  }\n\n  messageButton() {\n    if (this.props.hasChat === \"true\") {\n      return (\n        <IconButton\n        color=\"inherit\"\n        onClick={this.props.onOpen}\n        aria-label=\"Open Sidedrawer\"\n        >\n          <Badge badgeContent={\"!\"} color=\"secondary\">\n            <ChatIcon />\n          </Badge>\n        </IconButton>\n      );\n    }\n  }\n\n  loginLogoutButton() {\n    if (this.state.current_user === \"\") {\n      return (\n          <Button\n            href=\"/login\"\n            color=\"inherit\"\n            variant=\"outlined\"\n            className={this.props.classes.link}>\n            Login\n          </Button>\n      );\n    } else {\n      return (\n          <Button\n            onClick={this.handleSignOut}\n            color=\"inherit\"\n            variant=\"outlined\"\n            className={this.props.classes.link}>\n            Sign out\n          </Button>\n      );\n    }\n  }\n\n  username() {\n    if (this.state.current_user !== \"\") {\n      return (\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap >\n          {this.state.current_user}\n        </Typography>\n      );\n    }\n  }\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          open: false,\n          current_user: \"\"\n      }\n\n  }\n\n  componentDidMount() {\n    userRequests\n        .getCurrUser()\n        .then(res => {\n          try {\n            this.setState({current_user: res.data[0].firstName})\n          } catch {\n            //console.log(res.data);\n          }\n          //console.log(res.data[0].firstName);\n        });\n  }\n  render(){\n    const open = this.state.open;\n\n    return (\n      <div className={this.props.classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={clsx(this.props.classes.appBar, open && this.props.classes.appBarShift)}>\n          <Toolbar className={this.props.classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={clsx(this.props.classes.menuButton, open && this.props.classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\n              {this.props.name}\n            </Typography>\n            {this.username()}\n            {this.messageButton()}\n            {this.loginLogoutButton()}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(this.props.classes.drawerPaper, !open && this.props.classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={this.props.classes.toolbarIcon}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n      </div>\n    );\n\n  }\n}\nexport default (withStyles(styles, { withTheme: true })(NavAppBar));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from \"@material-ui/core\";\n\nfunction ConfirmationDialog(props) {\n  const { open, onClose, loading, title, content, onConfirm } = props;\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      disableBackdropClick={loading}\n      disableEscapeKeyDown={loading}\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{content}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} disabled={loading}>\n          Close\n        </Button>\n        <Button\n          color=\"secondary\"\n          onClick={onConfirm}\n          variant=\"contained\"\n          disabled={loading}\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  loading: PropTypes.bool,\n  title: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  onConfirm: PropTypes.func\n};\n\nexport default ConfirmationDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function PostAddBox() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Add Project\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">New Project</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add a new project.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Project Name\"\n            type=\"project name\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button href=\"/edit\" color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  TablePagination,\n  Divider,\n  Toolbar,\n  Typography,\n  Paper,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ConfirmationDialog from \"./ConfirmationDialog\";\nimport PostAddBox from \"./PostAddBox\";\n\nconst styles = {\n  dBlock: { display: \"block\" },\n  dNone: { display: \"none\" },\n  toolbar: {\n    justifyContent: \"space-between\"\n  }\n};\n\nclass PostContent extends PureComponent {\n  state = {\n    page: 0,\n    deletePostDialogOpen: false,\n    deletePostLoading: false\n  };\n\n  rowsPerPage = 25;\n\n  closeDeletePostDialog = () => {\n    this.setState({\n      deletePostDialogOpen: false,\n      deletePostLoading: false\n    });\n  };\n\n  deletePost = () => {\n    const { pushMessageToSnackbar } = this.props;\n    this.setState({ deletePostLoading: true });\n    setTimeout(() => {\n      this.setState({\n        deletePostLoading: false,\n        deletePostDialogOpen: false\n      });\n      pushMessageToSnackbar({\n        text: \"Your scheduled post has been deleted\"\n      });\n    }, 1500);\n  };\n\n  onDelete = () => {\n    this.setState({\n      deletePostDialogOpen: true\n    });\n  };\n\n  handleChangePage = (__, page) => {\n    this.setState({ page });\n  };\n\n  printImageGrid = () => {\n    const options = [];\n    options.push({\n      name: \"Delete\",\n      onClick: this.onDelete,\n      icon: <DeleteIcon />\n    });\n    const { posts } = this.props;\n    const { page } = this.state;\n    if (posts.length > 0) {\n      return (\n        <Box p={1}>\n          <Grid container spacing={1}>\n            {posts\n              .slice(\n                page * this.rowsPerPage,\n                page * this.rowsPerPage + this.rowsPerPage\n              )\n              .map(element => (\n                <Grid item xs={6} sm={4} md={3} key={element.id}>\n                  <Typography> {element} </Typography>\n                </Grid>\n              ))}\n          </Grid>\n        </Box>\n      );\n    }\n    return (\n      <Box m={2}>\n        <Typography>\n          No projects added yet. Click on &quot;Add Project&quot; to create your first one.\n        </Typography>\n      </Box>\n    );\n  };\n\n  render() {\n    const { page, deletePostDialogOpen, deletePostLoading } = this.state;\n    const { posts, classes } = this.props;\n\n    return (\n      <Paper>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\">Your Projects</Typography>\n          <PostAddBox />\n        </Toolbar>\n        <Divider />\n        {this.printImageGrid()}\n        <TablePagination\n          component=\"div\"\n          count={posts.length}\n          rowsPerPage={this.rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={this.handleChangePage}\n          classes={{\n            select: classes.dNone,\n            selectIcon: classes.dNone,\n            actions: posts.length > 0 ? classes.dBlock : classes.dNone,\n            caption: posts.length > 0 ? classes.dBlock : classes.dNone\n          }}\n          labelRowsPerPage=\"\"\n        />\n        <ConfirmationDialog\n          open={deletePostDialogOpen}\n          title=\"Confirmation\"\n          content=\"Do you really want to delete the post?\"\n          onClose={this.closeDeletePostDialog}\n          loading={deletePostLoading}\n          onConfirm={this.deletePost}\n        />\n      </Paper>\n    );\n  }\n}\n\nPostContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pushMessageToSnackbar: PropTypes.func\n};\n\nexport default withStyles(styles)(PostContent);\n","import React, { PureComponent, Fragment } from \"react\";\nimport PostContent from \"./PostContent\";\n\nclass Posts extends PureComponent {\n\n  render() {\n    return (\n      <Fragment>\n        <PostContent\n            posts={[]}\n          />\n      </Fragment>\n    );\n  }\n}\n\nexport default Posts;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport NavAppBar from '../NavBar/NavAppBar';\nimport Posts from '../Posts/Posts';\n\nfunction Credits() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        <Link color=\"inherit\" href=\"/credits\">\n        Credits\n        </Link>\n      </Typography>\n    );\n  }\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  link: {\n    margin: theme.spacing(1, 1),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <NavAppBar name=\"Dashboard\" hasChat=\"false\"/>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Posts />\n          <Box pt={4}>\n            <Credits />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n//import { Switch, Route, withRouter } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Dashboard from '../../components/DashboardPage/Dashboard';\n//import Box from '@material-ui/core/Box';\n//import Typography from '@material-ui/core/Typography';\n//import Navbar from '../../components/NavBar/';\n//import LoginManager from '../../components/core/LoginManager/';\n//import Home from './Home';\n\nimport \"./style.css\";\n\nclass Main extends React.Component {\n/*\n    componentDidMount() {\n        // Here we assume the user is logged in\n        let nextRoute = '/main',\n            requestedRoute = this.props.history.location.pathname;\n\n        if (!requestedRoute.match(/^\\/main\\/*$/)) {\n            nextRoute = requestedRoute;\n        }\n\n        // Go to the next route\n        this.props.history.push(nextRoute + (this.props.history.location.search ? this.props.history.location.search : \"\"));\n    }\n\n    routeTo(newRoute) {\n        // Here we assume the paths are valid since it comes from the\n        // navigation bar\n        this.props.history.push(newRoute);\n    }\n*/\n    render() {\n        return <Dashboard />\n        /*\n          return (\n          <Box className=\"cldi-home-page\">\n            <LoginManager store={this.props.store} />\n            <Switch>\n              <Route path=\"/main/viewprofile\" component={ViewProfilePage} />\n              <Route path=\"/main/joinfandom\" component={JoinFandom} />\n              <Route path=\"/main/newfandom\" component={NewFandom} />\n              <Route exact path=\"/main/messenger\" component={MessengerPage} />\n              <Route path=\"/main/contacts\" component={ViewContacts} />\n              <Route path=\"/main/newpost\" component={NewPost} />\n              <Route exact path=\"/main\" component={Home} />\n              <Route path=\"*\"><Typography align=\"center\">INVALID PATH</Typography></Route>\n            </Switch>\n            <Navbar callback={this.routeTo.bind(this)} />\n          </Box>\n        )\n        */\n    }\n}\n\nexport default withRouter(Main);\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport userRequests from '../../requests/userRequests'\n\n\nfunction Credits() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      <Link color=\"inherit\" href=\"/credits\">\n      Credits\n      </Link>\n    </Typography>\n  );\n}\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        /*this.state = {  // probably delete, unless using setState is considered better coding style than having mutable class variables, idk\n            signUpFirstName:'',\n            signUpLastName:'',\n            signUpEmail:'',\n            signUpPassword:''\n        }*/\n\n        this.handleSignUp = this.handleSignUp.bind(this);\n    }\n\n    handleSignUp = (e) => {\n        // prevent from refreshing the page on submit\n        e.preventDefault();\n        const new_user = { email: this.email.value, password: this.password.value, firstname: this.firstname.value, lastname: this.lastname.value }\n\n        userRequests\n            .signup(new_user)\n            .then(() => window.location.href = '/')\n            .catch(err => {\n                console.error(err);  // TODO: change this to be user-friendly error\n            });\n    };\n\n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={this.props.classes.paper}>\n                    <Link variant=\"h1\" color=\"primary\" href=\"/\">\n                        Jigsaw\n              </Link>\n                    <Avatar className={this.props.classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n            </Typography>\n                    <form className={this.props.classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    inputRef={node => {\n                                        this.firstname = node;\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                    inputRef={node => {\n                                        this.lastname = node;\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    inputRef={node => {\n                                        this.email = node;\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    inputRef={node => {\n                                        this.password = node;\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={this.props.classes.submit}\n                            onClick={this.handleSignUp}\n                        >\n                            Sign Up\n              </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n                  </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={5}>\n                    <Credits />\n                </Box>\n            </Container>\n        );\n    }\n}\nexport default (withStyles(styles, {withTheme: true})(SignUp));\n","import React from 'react';\nimport SignUp from './SignUp';\n\n\nclass SignUpPage extends React.Component {\n    render() {\n        return (\n            <SignUp />\n        )\n    }\n}\nexport default SignUpPage;\n","import React from 'react';\n//import Registration from '../../components/Registration/Registration.jsx'\nimport SignUpPage from '../../components/SignUpPage/SignUpPage';\n\nclass Signup extends React.Component{\n\n    render(){\n        return <SignUpPage />\n    }\n}\nexport default Signup;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport userRequests from '../../requests/userRequests'\n\n\nconst useStyles = theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(Jigsaw.jpeg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nfunction Credits() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      <Link color=\"inherit\" href=\"/credits\">\n      Credits\n      </Link>\n    </Typography>\n  );\n}\n\nclass SignInSide extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSignIn = this.handleSignIn.bind(this);\n    }\n\n    handleSignIn = (e) => {\n        // prevent from refreshing the page on submit\n        e.preventDefault();\n        const user = { email: this.email.value, password: this.password.value }\n\n        userRequests\n            .signin(user)\n            .then(() => window.location.href = '/')\n            .catch(err => {\n                console.error(err);  // TODO: change this to be user-friendly error\n            });\n    };\n\n\n    render() {\n        return (\n            <Grid container component=\"main\" className={this.props.classes.root}>\n                <CssBaseline />\n                <Grid item xs={false} sm={4} md={7} className={this.props.classes.image} />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className={this.props.classes.paper}>\n                        <Link variant=\"h1\" color=\"primary\" href=\"/\">\n                            Jigsaw\n                  </Link>\n                        <Avatar className={this.props.classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                  </Typography>\n                        <form className={this.props.classes.form} noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                inputRef={node => {\n                                    this.email = node;\n                                }}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                inputRef={node => {\n                                    this.password = node;\n                                }}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            />\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={this.props.classes.submit}\n                                onClick={this.handleSignIn}\n                            >\n                                Sign In\n                    </Button>\n                            <Grid container>\n                                <Grid item>\n                                    <Link href=\"/signup\" variant=\"body2\">\n                                        {\"Don't have an account? Sign Up\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                            <Box mt={5}>\n                                <Credits />\n                            </Box>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nexport default (withStyles(useStyles, { withTheme: true })(SignInSide));\n","import React from 'react';\nimport SignInSide from './SignInSide';\nrequire('./LoginPage.css')\n\n\nclass LoginPage extends React.Component {\n\n    render() {\n        return (\n            <SignInSide />\n        )\n    }\n\n}\nexport default LoginPage;\n","import React from 'react';\nimport LoginPage from '../../components/LoginPage/LoginPage'\n\nclass Login extends React.Component {\n\n    render() {\n        return <LoginPage className=\"cldi-login-page\" store={this.props.store}/>\n    }\n\n}\n\nexport default Login;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nclass Credits extends React.Component {\n\n    render() {\n      return(\n        <div>\n          <h1>Credits:</h1>\n          <li>\n            <a href=\"https://material-ui.com/\">Page Templates</a>\n          </li>\n          <li>\n            <a href=\"https://medium.com/lessons-from-ordinary/lesson-from-a-jigsaw-puzzle-d5f9a8136805\">Login Page Image</a>\n          </li>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            <Link color=\"inherit\" href=\"/\">\n            Home\n            </Link>\n          </Typography>\n        </div>\n        \n      )\n    }\n\n}\n\nexport default Credits;\n","import { COMPILE_CODE } from \"./action-types\";\n\nfunction compileCode(payload) {\n    return {type: COMPILE_CODE, payload};\n}\n\nexport default compileCode;\n","export const COMPILE_CODE = \"COMPILE_CODE\";\nexport const TOGGLE_DEBUG = \"TOGGLE_DEBUG\";\n\nexport default {COMPILE_CODE, TOGGLE_DEBUG};","import React from 'react';\nimport AceEditor from \"react-ace\";\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport compileCode from '../../store/actions';\nimport socketIOClient from 'socket.io-client';\nimport generateRandom from 'sillyname';\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport starterCode from './starterCode';\n\nrequire('./CodeEditor.css')\n\n// TODO: needs to come from env vars\nconst socket = socketIOClient('http://localhost:50001');\n\nclass CodeEditor extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            room:'',\n            code: starterCode\n        }\n\n        if(window.location.pathname !== '/edit' && window.location.pathname !== ''){\n          socket.emit('join', window.location.pathname)\n        }\n\n        socket.on('room', (room) => {\n          this.setState({\n            room: room\n          });\n        });\n\n        socket.on('message', (code) => {\n          this.setState({\n            code: code.value,\n            room: code.room\n          });\n        });\n    }\n\n    componentDidMount() {\n        this.props.compileCode(this.state.code);\n        if(window.location.pathname === '/edit'){\n          window.location.pathname = `/edit/${generateRandom().split(' ').join('')}`\n        }\n    }\n\n    onChange = (newValue) => {\n      socket.emit('message', {newValue, room: this.state.room})\n      this.setState({code: newValue});\n    }\n\n    // https://github.com/securingsincity/react-ace/issues/181\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.code !== nextState.code;\n    }\n\n    // Render editor\n    render () {\n        return (\n        <div className=\"split\">\n            <AceEditor\n                mode=\"javascript\"\n                theme=\"dracula\"\n                onChange={this.onChange}\n                name=\"ace-editor\"\n                editorProps={{ $blockScrolling: true }}\n                value={this.state.code}\n                width=\"100%\"\n                height=\"100%\"\n            />\n            <Button className=\"compile-button\" variant=\"contained\" color=\"primary\" onClick={()=> {this.props.compileCode(this.state.code)}}>Compile</Button>\n        </div>\n    )}\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        compileCode: code => dispatch(compileCode({code: code}))\n    };\n};\n\n// TODO :: undo for collab edit\n// var rev = session.$undoManager.startNewGroup(); // start new undo group\n// ... // apply the edit\n// session.$undoManager.markIgnored(rev); // mark the new group as ignored\n\nexport default connect(null, mapDispatchToProps)(CodeEditor);\n","export const starterCode =\n`var createScene = function() {\n    // Create a basic BJS Scene object.\n    var scene = new BABYLON.Scene(engine);\n\n    // Create a ArcRotateCamera.\n    var camera = new BABYLON.ArcRotateCamera(\"Camera\", -Math.PI / 4, Math.PI / 2.5, 10, BABYLON.Vector3.Zero(), scene);\n\n    // Target the camera to scene origin.\n    camera.setTarget(BABYLON.Vector3.Zero());\n\n    // Attach the camera to the canvas.\n    camera.attachControl(canvas, false);\n\n    // Create a basic light, aiming 0,1,0 - meaning, to the sky.\n    var light = new BABYLON.HemisphericLight('light1', new BABYLON.Vector3(0,1,0), scene);\n\n    // Create a built-in \"sphere\" shape.\n    var sphere = BABYLON.MeshBuilder.CreateSphere('sphere', {segments:16, diameter:2}, scene);\n\n    // Move the sphere upward 1/2 of its height.\n    sphere.position.y = 1;\n\n    // Create a built-in \"ground\" shape.\n    var ground = BABYLON.MeshBuilder.CreateGround('ground1', {height:6, width:6, subdivisions: 2}, scene);\n\n    // Return the created scene.\n    return scene;\n}\n`;\n\nexport default starterCode;\n","function playground(createScene, debug) {\r\n    let debugCode = ``;\r\n    if (debug) {\r\n        debugCode = `\r\n        scene.debugLayer.show({\r\n            embedMode:true\r\n        });`\r\n    }\r\n    return `\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html\" charset=\"utf-8\"/>\r\n        <title>Babylon - Getting Started</title>\r\n        <!--- Link to the last version of BabylonJS --->\r\n        <script src=\"https://cdn.babylonjs.com/babylon.js\"></script>\r\n        <style>\r\n            html, body {\r\n                overflow: hidden;\r\n                width   : 100%;\r\n                height  : 100%;\r\n                margin  : 0;\r\n                padding : 0;\r\n            }\r\n\r\n            #renderCanvas {\r\n                width   : 100%;\r\n                height  : 100%;\r\n                touch-action: none;\r\n            }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <canvas id=\"renderCanvas\"></canvas>\r\n        <script>\r\n            \"use strict\";\r\n            window.addEventListener('DOMContentLoaded', function(){\r\n                // get the canvas DOM element\r\n                var canvas = document.getElementById('renderCanvas');\r\n\r\n                // load the 3D engine\r\n                var engine = new BABYLON.Engine(canvas, true);\r\n\r\n                // createScene function that creates and return the scene\r\n                ${createScene}\r\n\r\n                // call the createScene function\r\n                var scene = createScene();\r\n\r\n                ${debugCode}\r\n\r\n                // run the render loop\r\n                engine.runRenderLoop(function(){\r\n                    scene.render();\r\n                });\r\n\r\n                // the canvas/window resize event handler\r\n                window.addEventListener('resize', function(){\r\n                    engine.resize();\r\n                });\r\n\r\n                // Initialize GizmoManager\r\n                var gizmoManager = new BABYLON.GizmoManager(scene)\r\n\r\n                // Initialize gizmo\r\n                gizmoManager.positionGizmoEnabled = true;\r\n\r\n                // Modify gizmos based on keypress\r\n                document.onkeydown = (e)=>{\r\n                    if(e.key == 'w' || e.key == 'e'|| e.key == 'r'|| e.key == 'q'){\r\n                        // Switch gizmo type\r\n                        gizmoManager.positionGizmoEnabled = false;\r\n                        gizmoManager.rotationGizmoEnabled = false;\r\n                        gizmoManager.scaleGizmoEnabled = false;\r\n                        gizmoManager.boundingBoxGizmoEnabled = false;\r\n                        if(e.key == 'w'){\r\n                            gizmoManager.positionGizmoEnabled = true;\r\n                        }\r\n                        if(e.key == 'e'){\r\n                            gizmoManager.rotationGizmoEnabled = true;\r\n                        }\r\n                        if(e.key == 'r'){\r\n                            gizmoManager.scaleGizmoEnabled = true;\r\n                        }\r\n                        if(e.key == 'q'){\r\n                            gizmoManager.boundingBoxGizmoEnabled = true;\r\n                        }\r\n                    }\r\n                    if(e.key == 'y'){\r\n                        // hide the gizmo\r\n                        gizmoManager.attachToMesh(null);\r\n                    }\r\n                    if(e.key == 't'){\r\n                      // Toggle local/global gizmo rotation positioning\r\n                      scene.debugLayer.show({\r\n                        embedMode:true\r\n                      });\r\n                    }\r\n                    if(e.key == 's'){\r\n                        // Toggle distance snapping\r\n                        if(gizmoManager.gizmos.scaleGizmo.snapDistance == 0){\r\n                            gizmoManager.gizmos.scaleGizmo.snapDistance = 0.3;\r\n                            gizmoManager.gizmos.rotationGizmo.snapDistance = 0.3;\r\n                            gizmoManager.gizmos.positionGizmo.snapDistance = 0.3;\r\n                        }else{\r\n                            gizmoManager.gizmos.scaleGizmo.snapDistance = 0;\r\n                            gizmoManager.gizmos.rotationGizmo.snapDistance = 0;\r\n                            gizmoManager.gizmos.positionGizmo.snapDistance = 0;\r\n                        }\r\n                    }\r\n                    if(e.key == 'd'){\r\n                        // Toggle gizmo size\r\n                        if(gizmoManager.gizmos.scaleGizmo.scaleRatio == 1){\r\n                            gizmoManager.gizmos.scaleGizmo.scaleRatio = 1.5;\r\n                            gizmoManager.gizmos.rotationGizmo.scaleRatio = 1.5;\r\n                            gizmoManager.gizmos.positionGizmo.scaleRatio = 1.5;\r\n                        }else{\r\n                            gizmoManager.gizmos.scaleGizmo.scaleRatio = 1;\r\n                            gizmoManager.gizmos.rotationGizmo.scaleRatio = 1;\r\n                            gizmoManager.gizmos.positionGizmo.scaleRatio = 1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n\r\n        </script>\r\n    </body>\r\n    </html>`\r\n}\r\n\r\nexport default playground;\r\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport playground from './playground';\n\nrequire('./ModelRenderer.css')\n\nclass ModelRenderer extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            code: null\n        }\n    }\n\n    // Render model\n    render () {\n        return (\n            <iframe className='split right' title='model-frame' ref='renderFrame' srcDoc={playground(this.props.code, this.props.debug || true)}></iframe>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    //console.log('mapping state to props');\n    //console.log(state.code);\n    return {code: state.code, debug: state.debug}\n};\n\nexport default connect(mapStateToProps)(ModelRenderer);\n","import React from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  Toolbar,\n  Divider,\n  Typography,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport socketIOClient from 'socket.io-client';\nimport userRequests from '../../requests/userRequests'\nimport generateRandom from 'sillyname';\nvar randomColor = require('randomcolor');\n\nconst socket = socketIOClient('http://localhost:50001');\n\nrequire('./SideDrawer.css');\n\nconst drawerWidth = 300;\n\nconst styles = {\n  minWidth: drawerWidth\n};\n\nclass SideDrawer extends React.Component {\n  //const { classes, onClose, open } = props;\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          classes:props.classes,\n          value:'',\n          room:'',\n          messages: [],\n          current_user: '',\n          color: ''\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n\n      if(window.location.pathname !== '/edit' && window.location.pathname !== ''){\n        socket.emit('join', window.location.pathname)\n      }\n\n      socket.on('room', (room) => {\n        this.setState({\n          room: room\n        })\n      })\n\n      socket.on('chat message', (msg) => {\n        this.setState({\n          messages: [...this.state.messages, {user: msg.user, value: msg.value, color: msg.color}],\n          room: msg.room\n        })\n        //window.scrollTo(0, document.body.scrollHeight);\n      })\n  }\n\n  componentDidMount() {\n    userRequests\n        .getCurrUser()\n        .then(res => {\n          try {\n            this.setState({current_user: res.data[0].firstName + \" \" + res.data[0].lastName})\n          } catch {\n            this.setState({current_user: \"Anonymous \" + generateRandom()})\n          }\n          this.setState({color: randomColor()})\n        });\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    socket.emit('chat message', {value: this.state.value, room: this.state.room, user: this.state.current_user, color: this.state.color});\n    event.preventDefault();\n    this.setState({\n      value: ''\n    });\n  }\n\n  render() {\n    const history = this.state.messages;\n    const chatHistory = history.map( (msg, key) => {\n      return (\n          <li id=\"message\" key={key}>\n            <div className=\"username\" id=\"message\" style={{color: msg.color}} key={key}>{msg.user}:</div>\n            {msg.value}\n          </li>\n      );\n    });\n\n      return (\n        <Drawer anchor=\"right\" open={this.props.open} variant=\"persistent\" >\n        <Toolbar disableGutters style={styles}>\n        </Toolbar>\n          <Toolbar disableGutters style={styles}>\n            <Box\n              pl={3}\n              pr={3}\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              width=\"100%\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h6\">Chat</Typography>\n              <IconButton\n                onClick={this.props.onClose}\n                color=\"primary\"\n                aria-label=\"Close Sidedrawer\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Box>\n          </Toolbar>\n          <Divider />\n          <ul id=\"messages\">{chatHistory}</ul>\n          <form className=\"form\" onSubmit={this.handleSubmit}>\n            <input className=\"input\" type=\"text\" value={this.state.value} onChange={this.handleChange} /><button className=\"button\">Send</button>\n          </form>\n        </Drawer>\n      );\n\n  }\n}\n\nexport default withStyles(styles)(SideDrawer);\n","import React from 'react';\nimport CodeEditor from '../CodeEditor/CodeEditor'\nimport ModelRenderer from '../ModelRenderer/ModelRenderer';\nimport { connect } from 'react-redux';\nimport SideDrawer from '../SideDrawer/SideDrawer';\nimport NavAppBar from '../NavBar/NavAppBar';\nrequire('./EditPage.css')\n\nclass EditPage extends React.Component {\n  state = { sideDrawerOpen: false };\n\n  closeDrawer = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  openDrawer = () => {\n    this.setState({ sideDrawerOpen: true });\n  };\n\n    render() {\n        return (\n            <div className='edit-page'>\n                <NavAppBar name=\"Edit\" hasChat=\"true\" onOpen={this.openDrawer} />\n                <main>\n                  <CodeEditor />\n                  <ModelRenderer />\n                </main>\n                <SideDrawer open={this.state.sideDrawerOpen} onClose={this.closeDrawer} />\n            </div>\n        )\n    }\n\n}\n\nexport default connect()(EditPage);\n","import React from 'react';\nimport EditPage from '../../components/EditPage/EditPage.js';\n\nclass Edit extends React.Component {\n\n    render() {\n        return (\n            <EditPage />\n        )\n    }\n\n}\n\nexport default Edit;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Main from './Main/Main';\nimport Signup from './Signup/Signup'\nimport Login from \"./Login/Login\";\nimport Credits from \"./Credits/Credits\"\nimport Edit from \"./Edit/Edit\"\n\nclass Root extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoggedIn: false,\n            currentRoute: \"viewprofile\",\n            routes: null\n        };\n    }\n/*\n    componentDidMount() {\n        // Determine routes based on whether the user is logged in or not\n        let isLoggedIn = this.props.store.get(\"isLoggedIn\");\n        this.setState({\n            isLoggedIn: isLoggedIn,\n            routes: (isLoggedIn ? loggedInRoutes(this.props) : nonLoggedInRoutes())\n        });\n\n        if (isLoggedIn) {\n            let nextRoute = '/main',\n                requestedRoute = this.props.history.location.pathname;\n            // Go to the requested path iff the path is none of the following conditions\n            if (requestedRoute !== '/' && requestedRoute !== '/signup' && requestedRoute !== '/login') {\n                nextRoute = requestedRoute;\n            }\n\n            // Go to the next route\n            this.props.history.push(nextRoute + (this.props.history.location.search ? this.props.history.location.search : \"\"));\n        } else if (this.props.history.location.pathname === \"/signup\") {\n            this.props.history.push('/signup');\n        } else if (this.props.history.location.pathname === \"/login\") {\n            this.props.history.push('/login');\n        } else {\n            this.props.history.push('/credits');\n        }\n    }\n*/\n    render() {\n        return tempRoutes();\n    }\n\n}\n\n// const loggedInRoutes = (props) => {\n//     return (\n//       <Switch>\n//         <Route path=\"/main\">\n//           <Main store={props.store} />\n//         </Route>\n//         <Route path=\"/edit\">\n//             <Edit store={props.store} />\n//         </Route>\n//         <Route path=\"*\">\n//             INVALID ROUTE\n//         </Route>\n//         <Route path=\"/credits\" component={Credits} />\n//       </Switch>\n//     );\n// }\n\n// const nonLoggedInRoutes = () => {\n//     return (\n//       <Switch>\n//         <Route path=\"/signup\" component={Signup} />\n//         <Route path=\"/login\" component={Login} />\n//         <Route path=\"/credits\" component={Credits} />\n//       </Switch>\n//     );\n// }\n\nconst tempRoutes = () => {\n    return (\n        <Switch>\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/credits\" component={Credits} />\n          <Route path=\"/edit\" component={Edit} />\n          <Route path=\"/main\" component={Main} />\n          <Route path=\"/\" component={Main} />\n        </Switch>\n      );\n}\n\nexport default Root;\n","import { COMPILE_CODE, TOGGLE_DEBUG } from './action-types';\n\nconst initialState = {\n    code: null,\n    createScene: null\n};\n\nfunction rootReducer(state=initialState, action) {\n    if (action.type === COMPILE_CODE) {\n        if (state.code !== action.payload.code) //console.log(\"code has changed, updating state\");\n        state = Object.assign({}, state, {code: action.payload.code});\n    } else if (action.type === TOGGLE_DEBUG) {\n        state = Object.assign({}, state, {debug: action.payload.debug});\n    }\n    return state;\n}\n\nexport { rootReducer };\n","import COMPILE_CODE from './action-types'\n\nfunction rendererMiddleWare({dispatch}) {\n    return function(next) {\n        return function(action) {\n            if (action.type === COMPILE_CODE) {\n                // actually don't need this\n                // action.payload.code =\n                // `'use strict';${action.payload.code}`;\n            }\n            return next(action);\n        }\n    }\n}\n\nexport default rendererMiddleWare;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { createStore, applyMiddleware } from 'redux'\nimport Root from './routes/index.js';\nimport {rootReducer} from './store/reducers';\nimport rendererMiddleWare from './store/middleware.js';\n\nconst store = createStore(rootReducer, applyMiddleware(rendererMiddleWare));\n\nclass App extends React.Component {\n\n    render() {\n        return (\n          <Provider store={store}>\n            <Router>\n              <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n              <Switch>\n                <Route path=\"/\" component={Root} />\n              </Switch>\n            </Router>\n          </Provider>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
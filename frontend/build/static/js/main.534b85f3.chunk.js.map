{"version":3,"sources":["serviceWorker.js","components/DashboardPage/listItems.js","components/DashboardPage/Title.js","components/DashboardPage/Deposits.js","components/DashboardPage/Orders.js","components/NavBar/NavAppBar.js","components/DashboardPage/Dashboard.js","routes/Main/Main.js","components/SignUpPage/SignUp.js","components/SignUpPage/SignUpPage.js","routes/Signup/Signup.js","components/LoginPage/SignInSide.js","redirectManager.js","cookieManager.js","requests/userRequests.js","components/LoginPage/LoginPage.js","routes/Login/Login.js","routes/Credits/Credits.js","store/actions.js","store/action-types.js","components/CodeEditor/CodeEditor.js","components/CodeEditor/starterCode.js","components/ModelRenderer/playground.js","components/ModelRenderer/ModelRenderer.js","components/EditPage/SideDrawer.js","components/EditPage/EditPage.js","routes/Edit/Edit.js","routes/index.js","store/reducers.js","store/middleware.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","mainListItems","ListItem","button","component","href","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","variant","color","gutterBottom","children","preventDefault","event","useStyles","makeStyles","depositContext","flex","Deposits","classes","Fragment","className","Link","onClick","createData","id","date","name","shipTo","paymentMethod","amount","rows","theme","seeMore","marginTop","spacing","Orders","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","key","NavAppBar","handleDrawerOpen","setState","open","handleDrawerClose","handleSignOut","axios","get","then","res","state","current_user","this","hasChat","IconButton","onOpen","aria-label","Badge","badgeContent","Button","link","noWrap","data","firstName","console","log","root","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","title","username","messageButton","loginLogoutButton","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","Divider","List","React","Component","withStyles","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","whiteSpace","height","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","margin","withTheme","Credits","Dashboard","useState","fixedHeightPaper","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","Main","withRouter","SignUp","handleSignUp","e","new_user","email","value","password","firstname","lastname","post","catch","err","error","bind","Avatar","avatar","form","noValidate","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","inputRef","node","type","FormControlLabel","control","Checkbox","submit","justify","mt","backgroundColor","palette","secondary","main","SignUpPage","Signup","SignInSide","handleSignIn","user","image","elevation","square","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","redirectManager","reloadPage","reload","goTo","path","getUrlVars","vars","replace","m","getUrlParam","parameter","defaultvalue","urlparameter","indexOf","handleRedirect","undefined","getCurrentPath","pathname","substring","cookieManager","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","ca","split","i","length","c","charAt","require","userRequests","putUser","requestBody","a","response","loginUserRequest","jwt","oidUser","getUser","params","putContact","sessionToken","put","headers","getContacts","CircularLoading","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","CircularProgress","LoginPage","handleEmailChange","handlePasswordChange","handleLoginAttempt","validateLoginInput","emailError","passwordError","loginInProgress","loginFailUnauthorizedError","loginFailInternalServerError","loginFailBadRequestError","loginSuccess","checkLoginSuccess","newEmail","target","newPassword","Promise","resolve","reject","renderUnauthorized","renderInternalServerError","renderBadRequest","loginResponse","status","store","set","Login","compileCode","payload","socket","socketIOClient","CodeEditor","onChange","newValue","emit","room","code","on","generateRandom","join","nextProps","nextState","mode","editorProps","$blockScrolling","connect","dispatch","playground","createScene","ModelRenderer","ref","srcDoc","styles","minWidth","SideDrawer","messages","handleChange","handleSubmit","msg","chat","history","chatHistory","anchor","disableGutters","style","pl","pr","onClose","onSubmit","EditPage","sideDrawerOpen","closeDrawer","openDrawer","mobileOpen","Edit","Root","isLoggedIn","currentRoute","routes","tempRoutes","initialState","rendererMiddleWare","next","action","createStore","Object","assign","applyMiddleware","App","rel","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.534b85f3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component=\"a\" href=\"/\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component=\"a\" href=\"/edit\">\n      <ListItemIcon>\n        <FeaturedPlayListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Edit\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved projects</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Star Platinum\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Super Fly\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Tower of Grey\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { mainListItems, secondaryListItems } from '../DashboardPage/listItems';\nimport { Button, withStyles } from '@material-ui/core';\nimport axios from 'axios';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    height: '100vh',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  link: {\n    margin: theme.spacing(1, 1),\n  },\n});\n\nclass NavAppBar extends React.Component {\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n  handleSignOut = () => {\n    axios\n        .get('http://localhost:3000/api/signout/')\n        .then(res => {\n          window.location.href=\"/\";\n        });\n  }\n\n  messageButton() {\n    if (this.props.hasChat == \"true\") {\n      return (\n        <IconButton\n        color=\"inherit\"\n        onClick={this.props.onOpen}\n        aria-label=\"Open Sidedrawer\"\n        >\n          <Badge badgeContent={\"!\"} color=\"secondary\">\n            <ChatIcon />\n          </Badge>\n        </IconButton>\n      );\n    }\n  }\n\n  loginLogoutButton() {\n    if (this.state.current_user == \"\") {\n      return (\n          <Button\n            href=\"/login\"\n            color=\"inherit\"\n            variant=\"outlined\"\n            className={this.props.classes.link}>\n            Login\n          </Button>\n      );\n    } else {\n      return (\n          <Button\n            onClick={this.handleSignOut}\n            color=\"inherit\"\n            variant=\"outlined\"\n            className={this.props.classes.link}>\n            Sign out\n          </Button>\n      );\n    }\n  }\n\n  username() {\n    if (this.state.current_user != \"\") {\n      return (\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap >\n          {this.state.current_user}\n        </Typography>\n      );\n    }\n  }\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          open: false,\n          current_user: \"\"\n      }\n\n  }\n\n  componentDidMount() {\n    axios\n        .get('http://localhost:3000/api/currrent_user/')\n        .then(res => {\n          try {\n            this.setState({current_user: res.data[0].firstName})\n          } catch {\n            console.log(res.data);\n          }\n          //console.log(res.data[0].firstName);\n        });\n  }\n  render(){\n    const open = this.state.open;\n\n    return (\n      <div className={this.props.classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={clsx(this.props.classes.appBar, open && this.props.classes.appBarShift)}>\n          <Toolbar className={this.props.classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={clsx(this.props.classes.menuButton, open && this.props.classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\n              {this.props.name}\n            </Typography>\n            {this.username()}\n            {this.messageButton()}\n            {this.loginLogoutButton()}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(this.props.classes.drawerPaper, !open && this.props.classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={this.props.classes.toolbarIcon}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n      </div>\n    );\n\n  }\n}\nexport default (withStyles(styles, { withTheme: true })(NavAppBar));\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\nimport NavAppBar from '../NavBar/NavAppBar';\nimport { Button } from '@material-ui/core';\n\nfunction Credits() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        <Link color=\"inherit\" href=\"/credits\">\n        Credits\n        </Link>\n      </Typography>\n    );\n  }\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  link: {\n    margin: theme.spacing(1, 1),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <NavAppBar name=\"Dashboard\" hasChat=\"false\"/>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Deposits again */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Credits />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Dashboard from '../../components/DashboardPage/Dashboard';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n//import Navbar from '../../components/NavBar/';\n//import LoginManager from '../../components/core/LoginManager/';\n//import Home from './Home';\n\nimport \"./style.css\";\n\nclass Main extends React.Component {\n/*\n    componentDidMount() {\n        // Here we assume the user is logged in\n        let nextRoute = '/main',\n            requestedRoute = this.props.history.location.pathname;\n\n        if (!requestedRoute.match(/^\\/main\\/*$/)) {\n            nextRoute = requestedRoute;\n        }\n\n        // Go to the next route\n        this.props.history.push(nextRoute + (this.props.history.location.search ? this.props.history.location.search : \"\"));\n    }\n\n    routeTo(newRoute) {\n        // Here we assume the paths are valid since it comes from the\n        // navigation bar\n        this.props.history.push(newRoute);\n    }\n*/\n    render() {\n        return <Dashboard />\n        /*\n          return (\n          <Box className=\"cldi-home-page\">\n            <LoginManager store={this.props.store} />\n            <Switch>\n              <Route path=\"/main/viewprofile\" component={ViewProfilePage} />\n              <Route path=\"/main/joinfandom\" component={JoinFandom} />\n              <Route path=\"/main/newfandom\" component={NewFandom} />\n              <Route exact path=\"/main/messenger\" component={MessengerPage} />\n              <Route path=\"/main/contacts\" component={ViewContacts} />\n              <Route path=\"/main/newpost\" component={NewPost} />\n              <Route exact path=\"/main\" component={Home} />\n              <Route path=\"*\"><Typography align=\"center\">INVALID PATH</Typography></Route>\n            </Switch>\n            <Navbar callback={this.routeTo.bind(this)} />\n          </Box>\n        )\n        */\n    }\n}\n\nexport default withRouter(Main);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\n\n//const axios = require('axios');\n\nfunction Credits() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      <Link color=\"inherit\" href=\"/credits\">\n      Credits\n      </Link>\n    </Typography>\n  );\n}\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        /*this.state = {  // probably delete, unless using setState is considered better coding style than having mutable class variables, idk\n            signUpFirstName:'',\n            signUpLastName:'',\n            signUpEmail:'',\n            signUpPassword:''\n        }*/\n\n        this.handleSignUp = this.handleSignUp.bind(this);\n    }\n\n    handleSignUp = (e) => {\n        // prevent from refreshing the page on submit\n        e.preventDefault();\n        const new_user = { email: this.email.value, password: this.password.value, firstname: this.firstname.value, lastname: this.lastname.value }\n\n        axios\n            .post('http://localhost:3000/api/signup/', new_user)\n            .then(() => window.location.href = '/')\n            .catch(err => {\n                console.error(err);  // TODO: change this to be user-friendly error\n            });\n    };\n    \n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={this.props.classes.paper}>\n                    <Link variant=\"h1\" color=\"primary\" href=\"/\">\n                        Jigsaw\n              </Link>\n                    <Avatar className={this.props.classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n            </Typography>\n                    <form className={this.props.classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    inputRef={node => {\n                                        this.firstname = node;\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                    inputRef={node => {\n                                        this.lastname = node;\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    inputRef={node => {\n                                        this.email = node;\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    inputRef={node => {\n                                        this.password = node;\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={this.props.classes.submit}\n                            onClick={this.handleSignUp}\n                        >\n                            Sign Up\n              </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n                  </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={5}>\n                    <Credits />\n                </Box>\n            </Container>\n        );\n    }\n}\nexport default (withStyles(styles, {withTheme: true})(SignUp));","import React from 'react';\nimport SignUp from './SignUp';\n\n\nclass SignUpPage extends React.Component {\n    render() {\n        return (\n            <SignUp />\n        )\n    }\n}\nexport default SignUpPage;\n","import React from 'react';\n//import Registration from '../../components/Registration/Registration.jsx'\nimport SignUpPage from '../../components/SignUpPage/SignUpPage';\n\nclass Signup extends React.Component{\n\n    render(){\n        return <SignUpPage />\n    }\n}\nexport default Signup;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\n//const axios = require('axios');  // already have import, which I prefer for neatness, but Thierry uses const so idk if this is considered better\n\nconst useStyles = theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(Jigsaw.jpeg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nfunction Credits() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      <Link color=\"inherit\" href=\"/credits\">\n      Credits\n      </Link>\n    </Typography>\n  );\n}\n\nclass SignInSide extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSignIn = this.handleSignIn.bind(this);\n    }\n\n    handleSignIn = (e) => {\n        // prevent from refreshing the page on submit\n        e.preventDefault();\n        const user = { email: this.email.value, password: this.password.value }\n\n        axios\n            .post('http://localhost:3000/api/signin/', user)\n            .then(() => window.location.href = '/')\n            .catch(err => {\n                console.error(err);  // TODO: change this to be user-friendly error\n            });\n    };\n\n\n    render() {\n        return (\n            <Grid container component=\"main\" className={this.props.classes.root}>\n                <CssBaseline />\n                <Grid item xs={false} sm={4} md={7} className={this.props.classes.image} />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className={this.props.classes.paper}>\n                        <Link variant=\"h1\" color=\"primary\" href=\"/\">\n                            Jigsaw\n                  </Link>\n                        <Avatar className={this.props.classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                  </Typography>\n                        <form className={this.props.classes.form} noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                inputRef={node => {\n                                    this.email = node;\n                                }}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                inputRef={node => {\n                                    this.password = node;\n                                }}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            />\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={this.props.classes.submit}\n                                //onClick=\"location.href='/main'\"\n                                onClick={this.handleSignIn}\n                            >\n                                Sign In\n                    </Button>\n                            <Grid container>\n                                <Grid item>\n                                    <Link href=\"/signup\" variant=\"body2\">\n                                        {\"Don't have an account? Sign Up\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                            <Box mt={5}>\n                                <Credits />\n                            </Box>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nexport default (withStyles(useStyles, { withTheme: true })(SignInSide));\n","let redirectManager = {\n\n    reloadPage: function(){\n        window.location.reload();\n    },\n    goTo: function(path){\n        window.location.href = `/${path}`;\n    },\n    getUrlVars : function () {\n        var vars = {};\n        window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {\n            vars[key] = value;\n        });\n        return vars;\n    },\n    getUrlParam: function(parameter, defaultvalue){\n        var urlparameter = defaultvalue;\n        if(window.location.href.indexOf(parameter) > -1){\n            urlparameter = this.getUrlVars()[parameter];\n            }\n        return urlparameter;\n    },\n   \n    handleRedirect: function(){\n        this.goTo(this.getUrlParam(\"redirect\") === undefined ? \"\" : this.getUrlParam(\"redirect\"))\n    },\n    getCurrentPath: function(){\n        return window.location.pathname.substring(1)\n    }\n}\nexport default redirectManager","let cookieManager = {\n    setCookie: function (cname, cvalue, exdays) {\n        var d = new Date();\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n        var expires = \"expires=\" + d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n    },\n\n    getCookie: function (cname) {\n        var name = cname + \"=\";\n        var ca = document.cookie.split(';');\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n}\nexport default cookieManager","import cookieManager from '../cookieManager'\n\nconst axios = require('axios')\n\nlet userRequests = {\n\n    putUser: async function (requestBody) {\n        try {\n            const response = await axios.post('/api/v1/addUser', requestBody)\n            return response\n        }\n        catch (error) {\n            console.error(error);\n            return error\n        }\n    },\n    loginUserRequest: async function (email, password) {\n        try {\n            const response = await axios.post('/api/v1/login', { \"email\": email, \"password\": password })\n\n            let jwt = response.data.jwt;\n            let oidUser = response.data.oidUser;\n            cookieManager.setCookie(\"sessionToken\", jwt, 1)\n            cookieManager.setCookie(\"authenticatedUserEmail\", email, 1)\n            cookieManager.setCookie(\"authenticatedOidUser\", oidUser, 1)\n            return response\n        }\n        catch (error) {\n            return error.response\n        }\n    },\n    getUser: async function (oidUser) {\n        try {\n            const response = await axios.get('/api/v1/getProfile', {\n                params: {\n                    oidUser: oidUser\n                }\n            });\n\n            return response\n        } catch (error) {\n            return error.response;\n        }\n    },\n    putContact: async function (requestBody, sessionToken) {\n        try {\n            const response = await axios.put('/api/v1/addContact', requestBody, {\n                headers: {\n                    jwt: sessionToken\n                }\n            })\n\n            return response\n        }\n        catch (error) {\n            console.error(error);\n            return error.response\n        }\n    },\n\n    getContacts: async function (oidUser, sessionToken) {\n        try {\n            return await axios.get(\"/api/v1/getContacts\", {\n                params: {\n                    oidUser: oidUser\n                },\n                headers: {\n                    jwt: sessionToken,\n                }\n            });\n        } catch (error) {\n            console.error(error);\n            return error.response;\n        }\n    }\n\n}\n\nexport default userRequests;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport SignInSide from './SignInSide';\nimport redirectManager from '../../redirectManager';\nimport userRequests from '../../requests/userRequests';\n\nrequire('./LoginPage.css')\n\n\nclass LoginPage extends React.Component {\n    constructor() {\n        super()\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\n        this.validateLoginInput = this.validateLoginInput.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            emailError: false,\n            passwordError: false,\n            loginInProgress: false,\n            loginFailUnauthorizedError: false,\n            loginFailInternalServerError: false,\n            loginFailBadRequestError: false,\n            loginSuccess: false\n        }\n    }\n    componentDidUpdate() {\n        this.checkLoginSuccess()\n    }\n    render() {\n        \n        return (\n            <SignInSide />\n        )\n        /*\n        return (\n            <Container className=\"login-page\" maxWidth=\"sm\">\n                <Card className=\"login-card\">\n                    <img\n                        style={{ width: \"25%\", display: \"block\", margin: \"0 auto\" }}\n                        src=\"/logo.svg\"\n                    />\n                    <Box pt={1}>\n                        <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                           Welcome to Fanlinc!\n                        </Typography >\n                        <Typography variant=\"body2\" align=\"center\">\n                            <i>The social media nework designed for fans</i>\n                        </Typography>\n                    </Box>\n\n                    <Box className=\"login-form-textfields-container\">\n                        <EmailField onInput={this.handleEmailChange} error={this.state.emailError} />\n                        <PasswordField onInput={this.handlePasswordChange} error={this.state.passwordError} />\n                        {this.renderLoginFailErrorText()}\n                        <LoginButton onClick={this.handleLoginAttempt} />\n                        <Typography className=\"login-page-sign-up-link\">\n                            Don't have an account?&nbsp;\n                            <Link href=\"/signup\">Click here to sign up.</Link>\n                        </Typography>\n                        {this.renderLoginLoading()}\n                    </Box>\n                </Card>\n            </Container>\n        )\n        */\n    }\n\n    handleEmailChange(newEmail) {\n        this.setState({ email: newEmail.target.value, emailError: false })\n    }\n    handlePasswordChange(newPassword) {\n        this.setState({ password: newPassword.target.value, passwordError: false })\n    }\n\n    validateLoginInput() {\n        let promise = new Promise((resolve, reject) => {\n            this.setState({ passwordError: this.state.password === \"\", emailError: this.state.email === \"\" })\n            resolve()\n        })\n\n        return promise\n    }\n    renderLoginLoading() {\n        if (this.state.loginInProgress) {\n            return <CircularLoading />\n        }\n    }\n    renderUnauthorized() {\n        if (this.state.loginFailUnauthorizedError) {\n            return (\n                <Typography color=\"error\" variant=\"subtitle2\">\n                    Wrong Password!\n            </Typography>\n            )\n        }\n    }\n    renderInternalServerError() {\n        if (this.state.loginFailInternalServerError) {\n            return (\n                <Typography color=\"error\" variant=\"subtitle2\">\n                    Internal Server Error!\n            </Typography>\n            )\n        }\n    }\n    renderBadRequest() {\n        if (this.state.loginFailBadRequestError) {\n            return (\n                <Typography color=\"error\" variant=\"subtitle2\">\n                    Wrong Username / Password!\n            </Typography>\n            )\n        }\n    }\n    renderLoginFailErrorText() {\n        return (\n            <div>\n                {this.renderUnauthorized()}\n                {this.renderInternalServerError()}\n                {this.renderBadRequest()}\n            </div>\n        )\n    }\n    handleLoginAttempt() {\n        /*\n        console.log(\"Login Attempt\");\n        */\n        \n        this.validateLoginInput()\n            .then(() => {\n                if (!this.state.passwordError && !this.state.emailError) {\n                    this.setState({ loginInProgress: true, loginFailUnauthorizedError: false, loginFailBadRequestError: false, loginFailInternalServerError: false })\n                    userRequests.loginUserRequest(this.state.email, this.state.password).then(\n                        (loginResponse) => {\n                            if (loginResponse.status === 200) {\n                                this.setState({ loginSuccess: true })\n                                /// After we have completed the login sucessfully, we update the global store to have the authenticated user, to be used throughout the app\n                                this.props.store.set('authenticatedUserEmail', this.state.email)\n                                this.props.store.set('isLoggedIn', true)\n                                this.props.store.set('authenticatedOidUser', loginResponse.data.oidUser)\n\n\n                            } else if (loginResponse.status === 401) {\n                                this.setState({ loginFailUnauthorizedError: true })\n                            } else if (loginResponse.status === 400) {\n                                this.setState({ loginFailBadRequestError: true })\n                            } else if (loginResponse.status === 500) {\n                                this.setState({ loginFailInternalServerError: true })\n                            }\n                            this.setState({ loginInProgress: false })\n\n                        }\n                    )\n                }\n            });\n    }\n    checkLoginSuccess() {\n        if (this.state.loginSuccess) {\n            redirectManager.handleRedirect()\n            //console.log(\"Login Success\");\n        }\n    }\n\n}\nfunction LoginButton(props) {\n    return (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"login-button\"\n            onClick={props.onClick}\n        >\n            Sign In\n        </Button>\n    )\n}\n\n\nfunction EmailField(props) {\n\n    return (<TextField\n        required\n        error={props.error}\n        label=\"Email\"\n        placeholder=\"somebody@email.com\"\n        className=\"login-text-field\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        onInput={props.onInput}\n\n    />)\n}\n\nfunction PasswordField(props) {\n\n    return (<TextField\n        required\n        onInput={props.onInput}\n        error={props.error}\n        label=\"Password\"\n        className=\"login-text-field\"\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n\n    />)\n}\n\nfunction CircularLoading() {\n    const [progress, setProgress] = React.useState(0);\n\n    React.useEffect(() => {\n        function tick() {\n            // reset when reaching 100%\n            setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n        }\n\n        const timer = setInterval(tick, 20);\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <Box display=\"flex\" className=\"login-progress-holder\">\n            <CircularProgress size={30} variant=\"determinate\" value={progress} />\n        </Box>\n    );\n}\nexport default LoginPage;\n","import React from 'react';\nimport LoginPage from '../../components/LoginPage/LoginPage'\n\nclass Login extends React.Component {\n\n    render() {\n        return <LoginPage className=\"cldi-login-page\" store={this.props.store}/>\n    }\n\n}\n\nexport default Login;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nclass Credits extends React.Component {\n\n    render() {\n      return(\n        <div>\n          <h1>Credits:</h1>\n          <li>\n            <a href=\"https://material-ui.com/\">Page Templates</a>\n          </li>\n          <li>\n            <a href=\"https://medium.com/lessons-from-ordinary/lesson-from-a-jigsaw-puzzle-d5f9a8136805\">Login Page Image</a>\n          </li>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            <Link color=\"inherit\" href=\"/\">\n            Home\n            </Link>\n          </Typography>\n        </div>\n        \n      )\n    }\n\n}\n\nexport default Credits;\n","import { COMPILE_CODE } from \"./action-types\";\n\nfunction compileCode(payload) {\n    return {type: COMPILE_CODE, payload};\n}\n\nexport default compileCode;","export const COMPILE_CODE = \"COMPILE_CODE\";\n\nexport default COMPILE_CODE;","import React from 'react';\nimport AceEditor from \"react-ace\";\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport compileCode from '../../store/actions';\nimport socketIOClient from 'socket.io-client';\nimport generateRandom from 'sillyname';\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport starterCode from './starterCode';\n\nrequire('./CodeEditor.css')\n\nconst socket = socketIOClient('http://localhost:5000');\n\nclass CodeEditor extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            room:'',\n            code: starterCode\n        }\n\n        if(window.location.pathname !== '/edit' && window.location.pathname !== ''){\n          socket.emit('join', window.location.pathname)\n        }\n\n        socket.on('room', (room) => {\n          console.log(room)\n          this.setState({\n            room: room\n          })\n        })\n\n        socket.on('message', (code) => {\n          this.setState({\n            code: code.value,\n            room: code.room\n          })\n        })\n    }\n\n\n    componentDidMount() {\n        this.props.compileCode(this.state.code);\n        if(window.location.pathname === '/edit'){\n          window.location.pathname = `/edit/${generateRandom().split(' ').join('')}`\n        }\n    }\n\n    onChange = (newValue) => {\n      socket.emit('message', {newValue, room: this.state.room})\n      this.setState({code: newValue});\n    }\n\n    // https://github.com/securingsincity/react-ace/issues/181\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.code !== nextState.code;\n    }\n\n    // Render editor\n    render () {\n        return (\n        <div className=\"split left\">\n            <AceEditor\n                mode=\"javascript\"\n                theme=\"dracula\"\n                onChange={this.onChange}\n                name=\"ace-editor\"\n                editorProps={{ $blockScrolling: true }}\n                value={this.state.code}\n                width=\"100%\"\n                height=\"100%\"\n            />\n            <Button className=\"compile-button\" variant=\"contained\" color=\"primary\" onClick={()=> {this.props.compileCode(this.state.code)}}>Compile</Button>\n        </div>\n    )}\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        compileCode: code => dispatch(compileCode({code: code}))\n    };\n};\n\n// TODO :: undo for collab edit\n// var rev = session.$undoManager.startNewGroup(); // start new undo group\n// ... // apply the edit\n// session.$undoManager.markIgnored(rev); // mark the new group as ignored\n\nexport default connect(null, mapDispatchToProps)(CodeEditor);\n","export const starterCode =\n`var createScene = function() {\n    // Create a basic BJS Scene object.\n    var scene = new BABYLON.Scene(engine);\n\n    // Create a FreeCamera, and set its position to (x:0, y:5, z:-10).\n    var camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 5,-10), scene);\n\n    // Target the camera to scene origin.\n    camera.setTarget(BABYLON.Vector3.Zero());\n\n    // Attach the camera to the canvas.\n    camera.attachControl(canvas, false);\n\n    // Create a basic light, aiming 0,1,0 - meaning, to the sky.\n    var light = new BABYLON.HemisphericLight('light1', new BABYLON.Vector3(0,1,0), scene);\n\n    console.log(canvas);\n\n    // Create a built-in \"sphere\" shape. \n    var sphere = BABYLON.MeshBuilder.CreateSphere('sphere', {segments:16, diameter:2}, scene);\n\n    // Move the sphere upward 1/2 of its height.\n    sphere.position.y = 1;\n\n    // Create a built-in \"ground\" shape.\n    var ground = BABYLON.MeshBuilder.CreateGround('ground1', {height:6, width:6, subdivisions: 2}, scene);\n\n    // Return the created scene.\n    return scene;\n}\n`;\n\nexport default starterCode;\n","function playground(createScene) {\r\n    return `\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html\" charset=\"utf-8\"/>\r\n        <title>Babylon - Getting Started</title>\r\n        <!--- Link to the last version of BabylonJS --->\r\n        <script src=\"https://cdn.babylonjs.com/babylon.js\"></script>\r\n        <style>\r\n            html, body {\r\n                overflow: hidden;\r\n                width   : 100%;\r\n                height  : 100%;\r\n                margin  : 0;\r\n                padding : 0;\r\n            }\r\n    \r\n            #renderCanvas {\r\n                width   : 100%;\r\n                height  : 100%;\r\n                touch-action: none;\r\n            }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <canvas id=\"renderCanvas\"></canvas>\r\n        <script>\r\n            window.addEventListener('DOMContentLoaded', function(){\r\n                // get the canvas DOM element\r\n                var canvas = document.getElementById('renderCanvas');\r\n    \r\n                // load the 3D engine\r\n                var engine = new BABYLON.Engine(canvas, true);\r\n    \r\n                // createScene function that creates and return the scene\r\n                ${createScene}\r\n    \r\n                // call the createScene function\r\n                var scene = createScene();\r\n    \r\n                // run the render loop\r\n                engine.runRenderLoop(function(){\r\n                    scene.render();\r\n                });\r\n    \r\n                // the canvas/window resize event handler\r\n                window.addEventListener('resize', function(){\r\n                    engine.resize();\r\n                });\r\n            });\r\n        </script>\r\n    </body>\r\n    </html>`\r\n}\r\n\r\nexport default playground;","import React from 'react';\nimport {connect} from 'react-redux';\nimport playground from './playground';\n\nrequire('./ModelRenderer.css')\n\nclass ModelRenderer extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            code: null\n        }\n    }\n\n    // Render model\n    render () {\n        return (\n            <iframe className='split right' title='model-frame' ref='renderFrame' srcDoc={playground(this.props.code)}></iframe>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log('mapping state to props');\n    console.log(state.code);\n    return {code: state.code}\n};\n\nexport default connect(mapStateToProps)(ModelRenderer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Drawer,\n  IconButton,\n  Toolbar,\n  Divider,\n  Typography,\n  Box,\n  List,\n  withStyles\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient('http://localhost:5000');\n\nrequire('./SideDrawer.css');\n\nconst drawerWidth = 300;\n\nconst styles = {\n  minWidth: drawerWidth\n};\n\nclass SideDrawer extends React.Component {\n  //const { classes, onClose, open } = props;\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          classes:props.classes,\n          value:'',\n          room:'',\n          messages: []\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n\n      if(window.location.pathname !== '/edit' && window.location.pathname !== ''){\n        socket.emit('join', window.location.pathname)\n      }\n\n      socket.on('room', (room) => {\n        console.log(room)\n        this.setState({\n          room: room\n        })\n      })\n\n      socket.on('chat message', (msg) => {\n        this.setState({\n          messages: [...this.state.messages, msg.value],\n          room: msg.room\n        })\n        //window.scrollTo(0, document.body.scrollHeight);\n      })\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    socket.emit('chat message', {chat: this.state.value, room: this.state.room});\n    event.preventDefault();\n    this.setState({\n      value: ''\n    });\n  }\n\n  render() {\n    const history = this.state.messages;\n    console.log(history);\n    const chatHistory = history.map( (msg, key) => {\n      return (\n          <li id=\"message\" key={key}>{msg}</li>\n      );\n    });\n\n      return (\n        <Drawer anchor=\"right\" open={this.props.open} variant=\"persistent\" >\n        <Toolbar disableGutters style={styles}>\n        </Toolbar>\n          <Toolbar disableGutters style={styles}>\n            <Box\n              pl={3}\n              pr={3}\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              width=\"100%\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h6\">Chat</Typography>\n              <IconButton\n                onClick={this.props.onClose}\n                color=\"primary\"\n                aria-label=\"Close Sidedrawer\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Box>\n          </Toolbar>\n          <Divider />\n          <ul id=\"messages\">{chatHistory}</ul>\n          <form className=\"form\" onSubmit={this.handleSubmit}>\n            <input className=\"input\" type=\"text\" value={this.state.value} onChange={this.handleChange} /><button className=\"button\">Send</button>\n          </form>\n        </Drawer>\n      );\n\n  }\n}\n\nexport default withStyles(styles)(SideDrawer);\n","import React from 'react';\nimport CodeEditor from '../CodeEditor/CodeEditor'\nimport ModelRenderer from '../ModelRenderer/ModelRenderer';\nimport { connect } from 'react-redux';\nimport SideDrawer from './SideDrawer';\nimport NavAppBar from '../NavBar/NavAppBar';\nimport Container from '@material-ui/core/Container';\nrequire('./EditPage.css')\n\nclass EditPage extends React.Component {\n  state = { sideDrawerOpen: false };\n\n  closeDrawer = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  openDrawer = () => {\n    this.setState({ sideDrawerOpen: true });\n  };\n\n    render() {\n        const { mobileOpen, sideDrawerOpen } = this.state;\n        return (\n            <div className='edit-page'>\n                <NavAppBar name=\"Edit\" hasChat=\"true\" onOpen={this.openDrawer} />\n                <Container >\n                  <CodeEditor />\n                  <ModelRenderer />\n                  <SideDrawer open={this.state.sideDrawerOpen} onClose={this.closeDrawer} />\n                </Container>\n            </div>\n        )\n    }\n\n}\n\nexport default connect()(EditPage);\n","import React from 'react';\nimport EditPage from '../../components/EditPage/EditPage.js';\n\nclass Edit extends React.Component {\n\n    render() {\n        return (\n            <EditPage />\n        )\n    }\n\n}\n\nexport default Edit;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Main from './Main/Main';\nimport Signup from './Signup/Signup'\nimport Login from \"./Login/Login\";\nimport Credits from \"./Credits/Credits\"\nimport Edit from \"./Edit/Edit\"\n\nclass Root extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoggedIn: false,\n            currentRoute: \"viewprofile\",\n            routes: null\n        };\n    }\n/*\n    componentDidMount() {\n        // Determine routes based on whether the user is logged in or not\n        let isLoggedIn = this.props.store.get(\"isLoggedIn\");\n        this.setState({\n            isLoggedIn: isLoggedIn,\n            routes: (isLoggedIn ? loggedInRoutes(this.props) : nonLoggedInRoutes())\n        });\n\n        if (isLoggedIn) {\n            let nextRoute = '/main',\n                requestedRoute = this.props.history.location.pathname;\n            // Go to the requested path iff the path is none of the following conditions\n            if (requestedRoute !== '/' && requestedRoute !== '/signup' && requestedRoute !== '/login') {\n                nextRoute = requestedRoute;\n            }\n\n            // Go to the next route\n            this.props.history.push(nextRoute + (this.props.history.location.search ? this.props.history.location.search : \"\"));\n        } else if (this.props.history.location.pathname === \"/signup\") {\n            this.props.history.push('/signup');\n        } else if (this.props.history.location.pathname === \"/login\") {\n            this.props.history.push('/login');\n        } else {\n            this.props.history.push('/credits');\n        }\n    }\n*/\n    render() {\n        return tempRoutes();\n    }\n\n}\n\n// const loggedInRoutes = (props) => {\n//     return (\n//       <Switch>\n//         <Route path=\"/main\">\n//           <Main store={props.store} />\n//         </Route>\n//         <Route path=\"/edit\">\n//             <Edit store={props.store} />\n//         </Route>\n//         <Route path=\"*\">\n//             INVALID ROUTE\n//         </Route>\n//         <Route path=\"/credits\" component={Credits} />\n//       </Switch>\n//     );\n// }\n\n// const nonLoggedInRoutes = () => {\n//     return (\n//       <Switch>\n//         <Route path=\"/signup\" component={Signup} />\n//         <Route path=\"/login\" component={Login} />\n//         <Route path=\"/credits\" component={Credits} />\n//       </Switch>\n//     );\n// }\n\nconst tempRoutes = () => {\n    return (\n        <Switch>\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/credits\" component={Credits} />\n          <Route path=\"/edit\" component={Edit} />\n          <Route path=\"/main\" component={Main} />\n          <Route path=\"/\" component={Main} />\n        </Switch>\n      );\n}\n\nexport default Root;\n","import { COMPILE_CODE } from './action-types';\n\nconst initialState = {\n    code: null,\n    createScene: null\n};\n\nfunction rootReducer(state=initialState, action) {\n    if (action.type === COMPILE_CODE) {\n        if (state.code !== action.payload.code) console.log(\"code has changed, updating state\");\n        state = Object.assign({}, state, {code: action.payload.code});\n    }\n    return state;\n}\n\nexport { rootReducer };\n","import COMPILE_CODE from './action-types'\n\nfunction rendererMiddleWare({dispatch}) {\n    return function(next) {\n        return function(action) {\n            if (action.type === COMPILE_CODE) {\n                // actually don't need this\n                // action.payload.code =\n                // `'use strict';${action.payload.code}`;\n            }\n            return next(action);\n        }\n    }\n}\n\nexport default rendererMiddleWare;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { createStore, applyMiddleware } from 'redux'\nimport Root from './routes/index.js';\nimport {rootReducer} from './store/reducers';\nimport rendererMiddleWare from './store/middleware.js';\n\nconst store = createStore(rootReducer, applyMiddleware(rendererMiddleWare));\n\nclass App extends React.Component {\n\n    render() {\n        return (\n          <Provider store={store}>\n            <Router>\n              <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n              <Switch>\n                <Route path=\"/\" component={Root} />\n              </Switch>\n            </Router>\n          </Provider>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}